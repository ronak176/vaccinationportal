{"version":3,"sources":["./src/app/charts/vaccination-chart/vaccination-chart.component.html","./src/app/charts/vaccination-chart/vaccination-chart.component.ts","canvas (ignored)","webpack:///fs (ignored)?584f","zlib (ignored)","./src/app/employee-details-page/employee-details-page.component.ts","./src/app/employee-details-page/employee-details-page.component.html","http (ignored)","https (ignored)","./src/app/shared/services/employee/employee.service.ts","url (ignored)","./src/app/components/diagnosis-form/diagnosis-form.component.ts","./src/app/components/diagnosis-form/diagnosis-form.component.html","./src/environments/environment.ts","./src/app/components/nav/nav.component.ts","./src/app/components/nav/nav.component.html","./src/app/components/authentication/forgot-password/forgot-password.component.ts","./src/app/components/authentication/forgot-password/forgot-password.component.html","./src/app/shared/services/get-covid-stats/get-covid-stats.service.ts","./src/app/shared/guard/auth/auth.guard.ts","./src/app/components/vaccination-form/vaccination-form.component.ts","./src/app/components/vaccination-form/vaccination-form.component.html","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/employee/homepage/homepage.component.ts","./src/app/components/employee/homepage/homepage.component.html","./src/app/app.module.ts","./src/app/charts/diagnosis-chart/diagnosis-chart.component.html","./src/app/charts/diagnosis-chart/diagnosis-chart.component.ts","./src/app/components/admin/admin.component.ts","./src/app/components/admin/admin.component.html","./src/app/charts/status-chart/status-chart.component.ts","./src/app/charts/status-chart/status-chart.component.html","./src/app/material/material.module.ts","./src/app/shared/services/auth/auth.service.ts","./src/app/card/card.component.ts","./src/app/card/card.component.html","./src/app/components/authentication/login-page/login-page.component.ts","./src/app/components/authentication/login-page/login-page.component.html","./src/app/charts/data-charts.module.ts","./src/app/components/employee/employee.component.ts","./src/app/components/employee/employee.component.html","./src/app/app-routing.module.ts","./src/app/components/nav/dashboard/dashboard.component.ts","./src/app/components/nav/dashboard/dashboard.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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AC9B,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,yBAAyB,IAAI,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC;QAC/F,IAAI,CAAC,mBAAmB,GAAG,IAAI;IACjC,CAAC;IAED,wBAAwB;QACtB,MAAM,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,wBAAwB,IAAI,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;QACtF,IAAI,GAAY;QAChB,GAAG,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACnC,GAAG,GAAG,GAAG;YACT,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;QAClB,CAAC,CAAC;IAEJ,CAAC;;gGAnMU,wBAAwB;wGAAxB,wBAAwB;QCjBrC,sEAAK;QACH,2EAAU;QACR,iFAAgB;QAAA,2EAAgB;QAAA,4DAAiB;QACjD,mFAAkB;QAChB,4JAyOyB;QAEzB,oHAGM;QACN,oHAGM;QACR,4DAAmB;QACrB,4DAAW;QACb,4DAAM;;QArPgD,0DAAoB;QAApB,oFAAoB;QA2O9D,0DAAuB;QAAvB,uFAAuB;QAIvB,0DAAyC;QAAzC,6GAAyC;;;;;;;;;;;;;ACnPrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2B;;;;;;;;;;;;;;;;;;AC5RO,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,0BAA0B,CAAC;KACpC;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,2EAA+B;;;;;;;;;;;;;;ACA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsE;AAMr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","file":"main.js","sourcesContent":["<div fxLayout=\"column\" fxLayoutAlign=\"space-evenly center\" fxLayoutGap=\"60px\" *ngIf=\"isDataAvailable\">\n  \n  <div class=\"chartContainer\" style=\"display: block\">\n    <canvas\n      baseChart\n      [data]=\"pieChartData\"\n      [labels]=\"pieChartLabels\"\n      [chartType]=\"pieChartType\"\n      [options]=\"pieChartOptions\"\n      [plugins]=\"pieChartPlugins\"\n      [legend]=\"pieChartLegend\"\n      [options]=\"options\"\n    >\n    </canvas>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ChartOptions, ChartType } from 'chart.js';\nimport { Label, SingleDataSet } from 'ng2-charts';\nimport { EmployeeService } from 'src/app/shared/services/employee/employee.service';\n\n@Component({\n  selector: 'app-vaccination-chart',\n  templateUrl: './vaccination-chart.component.html',\n  styleUrls: ['./vaccination-chart.component.css'],\n})\nexport class VaccinationChartComponent implements OnInit {\n  public pieChartOptions: ChartOptions = {\n    responsive: true,\n  };\n  public firstDoseCount = 0\n  public secondDoseCount = 0\n  public noDoseCount = 0\n  public isDataAvailable = false\n  public pieChartLabels: Label[] = ['Both done', 'First done', 'Not Vaccinated'];\n  public pieChartData: SingleDataSet\n  public pieChartType: ChartType = 'pie';\n  public pieChartLegend = true;\n  public pieChartPlugins = [];\n\n  public options: any = {\n    legend: {\n      position: 'bottom',\n    },\n  };\n\n  constructor(private service : EmployeeService) {}\n\n  ngOnInit() {\n    this.service.firstDoseValueChange.subscribe(res => this.firstDoseCount = res)\n    this.service.secondDoseValueChange.subscribe(res => this.secondDoseCount = res)\n    this.service.noDoseValueChange.subscribe(res => this.noDoseCount = res)\n    setTimeout(()=> this.setData(this.firstDoseCount, this.secondDoseCount, this.noDoseCount), 3000)\n  }\n\n  setData(fd : number, sd: number, nd: number){\n    this.pieChartData = [sd, fd, nd]\n    this.isDataAvailable = true\n  }\n}\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","import { Component, Input, OnInit } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { EmployeeService } from '../shared/services/employee/employee.service';\nimport { MatGridList } from '@angular/material/grid-list';\nimport { ActivatedRoute } from '@angular/router';\nimport { Employee } from '../shared/interfaces/employee/employee';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport * as moment from 'moment';\nimport { AngularFireStorage } from '@angular/fire/storage';\n\nexport interface GridColumns {\n  xs: number;\n  sm: number;\n  md: number;\n  lg: number;\n  xl: number;\n}\n\n@Component({\n  selector: 'app-employee-details-page',\n  templateUrl: './employee-details-page.component.html',\n  styleUrls: ['./employee-details-page.component.css'],\n})\nexport class EmployeeDetailsPageComponent implements OnInit{\n  employee : Employee;\n  id : string;\n  public constructor(private af : AngularFireStorage,private breakpointObserver: BreakpointObserver, private route : ActivatedRoute,private service : EmployeeService, private firestore : AngularFirestore) {}\n  cardLayout = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return {\n          columns: 1,\n          miniCard: { cols: 1, rows: 1 },\n          chart: { cols: 1, rows: 5 },\n          table: { cols: 1, rows: 4 },\n        };\n      }\n\n      return {\n        columns: 4,\n        miniCard: { cols: 1, rows: 1 },\n        chart: { cols: 3, rows: 3 },\n        table: { cols: 1, rows: 3 },\n      };\n    })\n  );\n\n  ngOnInit(){\n    this.route.params.subscribe(params => this.id = params.id );\n    this.firestore.collection('employees').doc(this.id).valueChanges().subscribe(res => {\n      this.employee = res;\n    })\n  }\n\n  getAge(dob : string) : number{\n    var dateMomentObject = moment(dob, \"DD/MM/YYYY\")\n    var dateObject = dateMomentObject.toDate()\n    var years = moment().diff(dateObject, 'years', false)\n    return years\n  }\n\n  firstDoseCertificate(){\n    const ref = this.af.ref(`${'/firstDoseCertificates'}/${this.employee.name}`)\n    ref.getDownloadURL().subscribe(res => {\n      window.open(res)\n    })\n  }\n\n  secondDoseCertificate(){\n    const ref = this.af.ref(`${'/secondDoseCertificates'}/${this.employee.name}`)\n    ref.getDownloadURL().subscribe(res => {\n      window.open(res)\n    })\n  }\n\n  negativeTestCertificate(){\n    const ref = this.af.ref(`${'/negativeReports'}/${this.employee.name}`)\n    ref.getDownloadURL().subscribe(res => {\n      window.open(res)\n    })\n  }\n}\n","<div class=\"grid-container\">\n  <h1 class=\"mat-h1\">Employee Details</h1>\n  <mat-grid-list cols=\"{{ (cardLayout | async)?.columns }}\" rowHeight=\"200px\">\n    <mat-grid-tile [colspan]=\"(cardLayout | async)?.table.cols\" [rowspan]=\"(cardLayout | async)?.table.rows\">\n      <app-card>\n        <div>\n          <div class=\"container\" fxLayout = \"column\" fxLayoutAlign = \"center center\">\n            <img src=\"../../../assets/employee.jpg\" alt=\"\" class=\"profile-image\" />\n            <div class=\"profile-name\">{{employee?.name}}</div>\n            <div class=\"profile-role\"><span>Role :</span> {{employee?.role}}</div>\n            <div class=\"profile-department\"><span>Department :</span> {{employee?.department}}</div>\n          </div>\n        </div>\n      </app-card>\n    </mat-grid-tile>\n\n    <mat-grid-tile [colspan]=\"(cardLayout | async)?.chart.cols\" [rowspan]=\"(cardLayout | async)?.chart.rows\">\n      <mat-card class=\"dashboard-card\">\n        <!-- <mat-toolbar class=\"edit-details-bar\">\n          <span>Details</span>\n        </mat-toolbar> -->\n        <mat-card-content class=\"dashboard-card-content\">\n\n          <mat-tab-group mat-align-tabs=\"center\">\n            <mat-tab>\n              <ng-template mat-tab-label>\n                <div\n                  fxLayout=\"row\"\n                  fxLayoutGap=\"3px\"\n                  fxLayoutAlign=\"center center\"\n                >\n                  <div>\n                    <mat-icon>person</mat-icon>\n                  </div>\n                  <div>General</div>\n                </div>\n              </ng-template>\n              <mat-list>\n                <mat-list-item\n                  ><p>\n                    <br />\n                    <br>\n                    <b>Employee ID : </b> {{ employee?.empid }} <br />\n                    <br></p\n                ></mat-list-item>\n                <mat-divider></mat-divider>\n                <mat-list-item\n                  ><p>\n                    <br />\n                    <br>\n                    <b>Name : </b> {{ employee?.name }} <br> <br /></p\n                ></mat-list-item>\n                <mat-divider></mat-divider>\n                <mat-list-item\n                  ><p><br><br /><b>Gender : </b> {{ employee?.gender }} <br> <br /></p\n                ></mat-list-item>\n                <mat-divider></mat-divider>\n                <mat-list-item\n                  ><p><br><br /><b>Age : </b> {{ getAge(employee?.dob) }} <br> <br /></p\n                ></mat-list-item>\n                <mat-divider></mat-divider>\n                <mat-list-item\n                  ><p><br> <br /><b>Mobile : </b> {{ employee?.mobile }} <br> <br /></p\n                ></mat-list-item>\n                <mat-divider></mat-divider>\n                <mat-list-item\n                  ><p>\n                    <br /><b>Location : </b> {{ employee?.location }}\n                  </p></mat-list-item\n                >\n              </mat-list>\n            </mat-tab>\n\n            <mat-tab>\n              <ng-template mat-tab-label>\n                <div\n                  fxLayout=\"row\"\n                  fxLayoutGap=\"3px\"\n                  fxLayoutAlign=\"center center\"\n                >\n                  <div>\n                    <mat-icon>vaccines</mat-icon>\n                  </div>\n                  <div>Vaccination</div>\n                </div>\n              </ng-template>\n              <mat-list>\n                <mat-list-item><p><br><b>First Dose : </b> <span *ngIf=\"employee?.firstDose === 'yesFirst'\">Done</span>\n                <span *ngIf=\"employee?.firstDose==='noFirst' || employee?.firstDose === ''\">Pending</span><br>\n                </p></mat-list-item>\n                <mat-divider></mat-divider>\n\n                <mat-list-item *ngIf=\"employee?.firstDose==='yesFirst'\"><p><br><b>Date of First Dose : </b>{{employee?.firstDate}} <br></p></mat-list-item>\n                <mat-divider></mat-divider>\n                <mat-list-item *ngIf=\"employee?.firstDose==='yesFirst'\"><p><br><b>First Dose Certificate : </b> <button mat-raised-button (click) = \"firstDoseCertificate()\">Download <mat-icon>file_download</mat-icon></button> <br></p></mat-list-item>\n                <mat-divider></mat-divider>\n                <mat-list-item><p><br><b>Second Dose : </b> <span *ngIf=\"employee?.secondDose === 'yesSecond'\">Done</span>\n                  <span *ngIf=\"employee?.secondDose==='noSecond' || employee?.secondDose === ''\">Pending</span><br>\n                  </p></mat-list-item>\n                  <mat-divider></mat-divider>\n                  <mat-list-item *ngIf=\"employee?.secondDose==='yesSecond'\"><p><br><b>Date of Second Dose : </b>{{employee?.secondDate}} <br></p></mat-list-item>\n                  <mat-divider></mat-divider>\n                  <mat-list-item *ngIf=\"employee?.secondDose==='yesSecond'\"><p><br><b>Second Dose Certificate : </b> <button mat-raised-button (click) = \"secondDoseCertificate()\">Download <mat-icon>file_download</mat-icon></button> <br></p></mat-list-item>\n                  <mat-divider></mat-divider>\n                  <mat-list-item><p><br><b>Vaccine Taken : </b><span *ngIf=\"employee?.vaccine === ''\">None</span>\n                  <span *ngIf=\"employee?.vaccine !== ''\">{{employee?.vaccine}}</span><br>\n                  </p></mat-list-item>\n              </mat-list>\n            </mat-tab>\n\n            <!-- <mat-tab label=\"Vaccination\">\n              <div fxLayout=\"column\" style=\"margin-top: 30px; margin-left: 30px;\" fxLayoutAlign=\"space-evenly start\">\n              <div>\n                  <p><b>FIRST DOSE : </b> <span *ngIf=\"employee?.firstDose==='yesFirst'\">Done</span>\n                  <span *ngIf=\"employee?.firstDose==='noFirst'\">Pending</span>\n                  </p>\n                </div>\n\n                <div *ngIf=\"employee?.firstDose==='yesFirst'\">\n                  <p><b>DATE OF FIRST DOSE : </b> <span>{{employee?.firstDate}}</span>\n                  </p>\n                </div>\n\n                <div *ngIf=\"employee?.firstDose==='yesFirst'\">\n                  <p><b>FIRST DOSE CERTIFICATE :</b> <button mat-raised-button (click) = \"firstDoseCertificate()\">Download <mat-icon>file_download</mat-icon></button></p>\n                </div>\n\n                <div>\n                  <p><b>SECOND DOSE : </b> <span *ngIf=\"employee?.secondDose==='yesSecond'\">Done</span>\n                  <span *ngIf=\"employee?.secondDose==='noSecond'\">Pending</span>\n                  </p>\n              </div>\n\n              <div *ngIf=\"employee?.secondDose==='yesSecond'\">\n                <p><b>DATE OF SECOND DOSE : </b> <span>{{employee?.secondDate}}</span>\n                </p>\n              </div>\n\n              <div *ngIf=\"employee?.secondDose==='yesSecond'\">\n                <p><b>SECOND DOSE CERTIFICATE :</b> <button mat-raised-button (click) = \"secondDoseCertificate()\">Download <mat-icon>file_download</mat-icon></button></p>\n              </div>\n\n              <div *ngIf=\"employee?.firstDose==='yesFirst'\">\n                <p><b>VACCINE TAKEN : </b> <span>{{employee?.vaccine}}</span>\n                </p>\n              </div>\n              </div>\n\n            </mat-tab> -->\n\n            <mat-tab>\n              <ng-template mat-tab-label>\n                <div\n                  fxLayout=\"row\"\n                  fxLayoutGap=\"3px\"\n                  fxLayoutAlign=\"center center\"\n                >\n                  <div>\n                    <mat-icon>coronavirus</mat-icon>\n                  </div>\n                  <div>Diagnosis</div>\n                </div>\n              </ng-template>\n              <mat-list>\n                <mat-list-item><p><br><b> Diagnosed : </b> <span *ngIf=\"employee?.diagnosed==='yesDiagnosed'\">Yes</span>\n                  <span *ngIf=\"employee?.diagnosed==='noDiagnosed' || employee?.diagnosed === ''\">No</span><br>\n                  </p></mat-list-item>\n                  <mat-divider></mat-divider>\n                  <mat-list-item *ngIf=\"employee?.diagnosed==='yesDiagnosed'\"><p><br><b>Date of Diagnosis : </b> <span>{{employee?.dateOfDiagnosis}}</span><br>\n                  </p></mat-list-item>\n                  <mat-divider></mat-divider>\n                  <mat-list-item *ngIf=\"employee?.diagnosed==='yesDiagnosed'\"><p><br><b>Symptoms : </b> <span *ngIf=\"employee?.symptoms==='yesSymptoms'\">Yes</span>\n                    <span *ngIf=\"employee?.symptoms==='noSymptoms'\">No</span><br>\n                    </p></mat-list-item>\n                    <mat-divider></mat-divider>\n                  <mat-list-item *ngIf=\"employee?.diagnosed==='yesDiagnosed'\"><p><b>Tested Negative : </b> <span *ngIf=\"employee?.testedNegative===true\">Yes</span>\n                    <span *ngIf=\"employee?.testedNegative===false\">No</span>\n                  </p></mat-list-item>\n                  <mat-divider></mat-divider>\n                  <mat-list-item *ngIf=\"employee?.diagnosed==='yesDiagnosed'\"><p><br><b>Date of Testing Negative : </b> <span>{{employee?.dateNegative}}</span><br>\n                  </p></mat-list-item>\n                  <mat-divider></mat-divider>\n                  <mat-list-item *ngIf=\"employee?.diagnosed==='yesDiagnosed'\"><p><br><b>Negative Test Certificate :</b> <button mat-raised-button (click) = \"negativeTestCertificate()\">Download <mat-icon>file_download</mat-icon></button><br></p></mat-list-item>\n                  <mat-divider></mat-divider>\n                  <mat-list-item *ngIf=\"employee?.diagnosed==='yesDiagnosed'\"><p><br><b>Positive in Family : </b> <span *ngIf=\"employee?.positiveFamily\">Yes</span>\n                    <span *ngIf=\"!employee?.positiveFamily\">No</span><br>\n                  </p></mat-list-item>\n              </mat-list>\n            </mat-tab>\n\n            <!-- <mat-tab label=\"Diagnosis\">\n              <div fxLayout=\"column\" style=\"margin-top: 30px; margin-left: 30px;\" fxLayoutAlign=\"space-evenly start\">\n                <div>\n                    <p><b> DIAGNOSED : </b> <span *ngIf=\"employee?.diagnosed==='yesDiagnosed'\">Yes</span>\n                    <span *ngIf=\"employee?.diagnosed==='noDiagnosed'\">No</span>\n                    </p>\n                  </div>\n  \n                  <div *ngIf=\"employee?.diagnosed==='yesDiagnosed'\">\n                    <p><b>DATE OF DIAGNOSIS : </b> <span>{{employee?.dateOfDiagnosis}}</span>\n                    </p>\n                  </div>\n  \n                  <div *ngIf=\"employee?.diagnosed==='yesDiagnosed'\">\n                    <p><b>SYMPTOMS : </b> <span *ngIf=\"employee?.symptoms==='yesSymptoms'\">Yes</span>\n                    <span *ngIf=\"employee?.symptoms==='noSymptoms'\">No</span>\n                    </p>\n                </div>\n  \n                <div *ngIf=\"employee?.diagnosed==='yesDiagnosed'\">\n                  <p><b>TESTED NEGATIVE : </b> <span *ngIf=\"employee?.testedNegative===true\">Yes</span>\n                    <span *ngIf=\"employee?.testedNegative===false\">No</span>\n                  </p>\n                </div>\n\n                <div *ngIf=\"employee?.testedNegative===true\">\n                  <p><b>DATE OF TESTING NEGATIVE : </b> <span>{{employee?.dateNegative}}</span>\n                  </p>\n                </div>\n\n                <div *ngIf=\"employee?.testedNegative===true\">\n                  <p><b>NEGATIVE TEST CERTIFICATE :</b> <button mat-raised-button (click) = \"negativeTestCertificate()\">Download <mat-icon>file_download</mat-icon></button></p>\n                </div>\n  \n                <div *ngIf=\"employee?.testedNegative===true\">\n                  <p><b>POSITIVE IN FAMILY : </b> <span *ngIf=\"employee?.positiveFamily\">Yes</span>\n                    <span *ngIf=\"!employee?.positiveFamily\">No</span>\n                  </p>\n                </div>\n                </div>\n            </mat-tab> -->\n          </mat-tab-group>\n\n\n\n\n\n          <!-- <form class=\"example-form\"> \n            <table class=\"example-full-width\" cellspacing=\"0\"><tr fxLayout=\"row\" fxLayout.sm=\"column\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-evenly center\">\n              <td fxFlex=\"50%\"><mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>First name</mat-label>\n                <input matInput>\n              </mat-form-field></td>\n              <td fxFlex=\"50%\"><mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>Last Name</mat-label>\n                <input matInput>\n              </mat-form-field></td>\n            </tr></table>\n\n            <p>\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>Address</mat-label>\n                <textarea matInput></textarea>\n              </mat-form-field>\n            </p>\n\n            <table class=\"example-full-width\" cellspacing=\"0\"><tr fxLayout=\"row\" fxLayout.sm=\"column\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-evenly center\">\n              <td><mat-form-field appearance=\"outline\">\n                <mat-label>Date Of Birth</mat-label>\n                <input matInput [matDatepicker]=\"picker\">\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                <mat-datepicker #picker></mat-datepicker>\n              </mat-form-field></td>\n              <td><mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                <mat-label>Mobile Number</mat-label>\n                <input matInput #mobile maxlength=\"10\">\n                <mat-hint>{{mobile.value.length}} / 10</mat-hint>\n              </mat-form-field></td>\n            </tr></table>\n\n\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n              <mat-label>Email</mat-label>\n              <input matInput>\n            </mat-form-field>\n          \n            <table class=\"example-full-width\" cellspacing=\"0\"><tr fxLayout=\"row\" fxLayout.sm=\"column\" fxLayout.xs=\"column\" fxLayoutAlign=\"space-evenly center\">\n              <td><mat-form-field appearance=\"outline\">\n                <mat-label>Department</mat-label>\n                <mat-select>\n                  <mat-option value=\"one\">First</mat-option>\n                  <mat-option value=\"two\">Second</mat-option>\n                </mat-select>\n              </mat-form-field></td>\n              <td><mat-form-field appearance=\"outline\">\n                <mat-label>Role</mat-label>\n                <mat-select>\n                  <mat-option value=\"one\">First option</mat-option>\n                  <mat-option value=\"two\">Second option</mat-option>\n                </mat-select>\n              </mat-form-field></td>\n            </tr></table>\n            <button mat-raised-button type=\"submit\" class=\"submit-button\">Update</button>\n          </form> -->\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n\n\n","/* (ignored) */","/* (ignored) */","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Employee } from '../../interfaces/employee/employee';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n  formData ?: Employee;\n  selectedEmployee : Employee;\n  eligibleCount = 0\n  nonEligibleCount = 0\n  pendingResponseCount = 0\n  firstDoseCount = 0\n  secondDoseCount = 0\n  noDoseCount = 0\n  testedNegativeCount = 0\n  diagnosedCount = 0\n\n  eligibleValueChange: Subject<number> = new Subject<number>()\n  nonEligibleValueChange: Subject<number> = new Subject<number>()\n  pendingValueChange: Subject<number> = new Subject<number>()\n  firstDoseValueChange: Subject<number> = new Subject<number>() \n  secondDoseValueChange: Subject<number> = new Subject<number>() \n  noDoseValueChange : Subject<number> = new Subject<number>() \n  testedNegativeValueChange : Subject<number> = new Subject<number>() \n  diagnosedValueChange : Subject<number> = new Subject<number>() \n\n  constructor(private firestore : AngularFirestore) {}\n\n  getEmployees(){\n    return this.firestore.collection('employees').snapshotChanges().pipe(map(changes => {\n      return changes.map(a=>{\n        const data = a.payload.doc.data() as Employee;\n        data.id = a.payload.doc.id;\n        return data;\n      })\n    }));\n  }\n\n  eligibleChange(eligibleCount: number){\n    this.eligibleCount = eligibleCount\n    this.eligibleValueChange.next(this.eligibleCount)  \n  }\n\n  nonEligibleChange(nonEligibleCount: number){\n    this.nonEligibleCount = nonEligibleCount\n    this.nonEligibleValueChange.next(this.nonEligibleCount)  \n  }\n\n  pendingChange(pendingResponseCount: number){\n    this.pendingResponseCount = pendingResponseCount\n    this.pendingValueChange.next(this.pendingResponseCount)  \n  }\n\n  firstDoseChange(firstDoseCount: number){\n    this.firstDoseCount = firstDoseCount\n    this.firstDoseValueChange.next(this.firstDoseCount)\n  }\n\n  secondDoseChange(secondDoseCount: number){\n    this.secondDoseCount = secondDoseCount\n    this.secondDoseValueChange.next(this.secondDoseCount)\n  }\n\n  noDoseChange(noDoseCount: number){\n    this.noDoseCount = noDoseCount\n    this.noDoseValueChange.next(this.noDoseCount)\n  }\n\n  testedNegativeChange(testedNegativeCount: number){\n    this.testedNegativeCount = testedNegativeCount\n    this.testedNegativeValueChange.next(this.testedNegativeCount)\n  }\n\n  diagnosedChange(diagnosedCount : number){\n    this.diagnosedCount = diagnosedCount\n    this.diagnosedValueChange.next(this.diagnosedCount)\n  }\n\n  selectEmployee(item : Employee){\n    this.selectedEmployee = item; \n    console.log(this.selectedEmployee);\n  }\n}\n","/* (ignored) */","import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { AngularFireStorage } from '@angular/fire/storage';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport * as moment from 'moment';\nimport { Employee } from 'src/app/shared/interfaces/employee/employee';\nimport { userDetails } from 'src/app/shared/interfaces/user/userDetails';\n\n@Component({\n  selector: 'app-diagnosis-form',\n  templateUrl: './diagnosis-form.component.html',\n  styleUrls: ['./diagnosis-form.component.css'],\n})\nexport class DiagnosisFormComponent implements OnInit {\n  pdfSrc  = \"https://cwi.edu/sites/default/files/file_contenttype/sop_returntowork_final_0.pdf\"\n  formGroup: FormGroup;\n  newDetails: Employee = {};\n  currentUser: userDetails;\n  currentUserDetails: Employee;\n  firstTimeResponse: Boolean = false;\n  formSubmitted: Boolean = false;\n  currentUserId: string;\n  path : String\n  uploadValid = false\n  uploadSuccess = false\n  diagnosisDate = undefined\n  negativeDate = undefined\n\n  public constructor(\n    private af: AngularFireStorage,\n    private breakpointObserver: BreakpointObserver,\n    private route: ActivatedRoute,\n    private afAuth: AngularFireAuth,\n    private afs: AngularFirestore\n  ) {\n    this.formGroup = new FormGroup({\n      location : new FormControl(),\n      diagnosed: new FormControl(),\n      dateOfDiagnosis: new FormControl(),\n      symptoms: new FormControl(),\n      testedNegative: new FormControl(),\n      dateNegative: new FormControl(),\n      positiveFamily: new FormControl(),\n    });\n\n    this.uploadSuccess = false\n  }\n\n  ngOnInit(): void {\n    this.uploadValid = false\n    this.uploadSuccess = false\n    this.negativeDate = undefined\n    this.diagnosisDate = undefined\n    this.afAuth.authState.subscribe((user) => {\n      this.currentUserId = user.uid;\n      this.afs\n        .doc(`usersData/${user.uid}`)\n        .valueChanges()\n        .subscribe((res) => {\n          this.currentUser = res;\n          this.formSubmitted = this.currentUser.dFormSubmit\n          this.afs\n            .doc(`employees/${this.currentUser.name}`)\n            .valueChanges()\n            .subscribe((res) => {\n              this.currentUserDetails = res;\n              let parsed = moment(this.currentUserDetails.dob, \"DD/MM/YYYY\")\n              //console.log(moment().diff(parsed, 'years'))\n            });\n        });\n    });\n    \n  }\n\n  clickLocation(){\n    this.newDetails.location = this.formGroup.controls['location'].value\n    //console.log(this.newDetails.location)\n  }\n\n  clickDiagnosed() {\n    this.newDetails.diagnosed = this.formGroup.controls['diagnosed'].value;\n    //console.log(this.newDetails.diagnosed);\n  }\n\n  clickDateOfDiagnosis() {\n    const momentDate = new Date(\n      this.formGroup.controls['dateOfDiagnosis'].value\n    );\n    const formattedDate = moment(momentDate).format('DD/MM/YYYY');\n    this.newDetails.dateOfDiagnosis = formattedDate;\n    //console.log(this.newDetails.dateOfDiagnosis);\n  }\n\n  clickSymptoms() {\n    this.newDetails.symptoms = this.formGroup.controls['symptoms'].value;\n    //console.log(this.newDetails.symptoms);\n  }\n\n  clickTestedNegative() {\n    this.newDetails.testedNegative =\n      this.formGroup.controls['testedNegative'].value;\n    //console.log(this.newDetails.testedNegative);\n  }\n\n  clickDateNegative() {\n    const momentDate = new Date(this.formGroup.controls['dateNegative'].value);\n    const formattedDate = moment(momentDate).format('DD/MM/YYYY');\n    this.newDetails.dateNegative = formattedDate;\n    //console.log(this.newDetails.dateNegative);\n  }\n\n  clickPositiveFamily() {\n    this.newDetails.positiveFamily =\n      this.formGroup.controls['positiveFamily'].value\n    //console.log(this.newDetails.positiveFamily)\n  }\n\n  clickSubmit() {\n    if(this.newDetails.diagnosed === 'noDiagnosed'){\n      this.newDetails.dateOfDiagnosis = \"\"\n      this.newDetails.positiveFamily = false\n      this.newDetails.symptoms = \"\"\n      this.newDetails.testedNegative = false\n      this.newDetails.dateNegative = \"\"\n    }\n    this.afs\n      .doc('employees/' + this.currentUserDetails.name)\n      .update(this.newDetails);\n    this.afs\n      .doc('usersData/' + this.currentUserId)\n      .update({ dFormSubmit: true })\n  }\n\n  clickEdit() {\n    this.afs\n      .doc('usersData/' + this.currentUserId)\n      .update({ dFormSubmit: false })\n  }\n\n  upload($event){\n    this.path = $event.target.files[0]\n    this.uploadValid = true\n  }\n\n  uploadReport(){\n    this.af.upload(`${'/negativeReports'}/${this.currentUserDetails.name}`, this.path)\n    this.uploadSuccess = true\n  }\n}\n","<div>\n  <mat-card>\n    <mat-card-title> Diagnosis Form </mat-card-title>\n    <mat-card-content>\n      <mat-horizontal-stepper #stepper linear= true *ngIf=\"!formSubmitted\" completed = false>\n        <mat-step [stepControl]=\"formGroup\">\n          <form [formGroup]=\"formGroup\">\n            <ng-template matStepLabel>Step</ng-template>\n            <br />\n            <br />\n            <p>Have you contracted Covid in the last 3 months?</p>\n            <mat-radio-group required formControlName=\"diagnosed\" [(ngModel)]=\"newDetails.diagnosed\">\n              <mat-radio-button value=\"yesDiagnosed\">Yes</mat-radio-button>\n              <mat-radio-button value=\"noDiagnosed\">No</mat-radio-button>\n            </mat-radio-group>\n            <br />\n            <br />\n            <button mat-raised-button color=\"warn\" matStepperPrevious>Back</button>\n            <span> | </span>\n            <button [disabled] = \"newDetails.diagnosed === undefined\" mat-raised-button matStepperNext color=\"primary\" (click)=\"clickDiagnosed()\">\n              Next\n            </button>\n          </form>\n        </mat-step>\n\n        <mat-step [stepControl]=\"formGroup\" *ngIf=\"newDetails.diagnosed === 'yesDiagnosed'\">\n          <form [formGroup]=\"formGroup\">\n            <ng-template matStepLabel>Step</ng-template>\n            <br />\n            <br />\n            <p>When did you contract Covid?</p>\n            <mat-form-field>\n              <mat-label>Choose a date</mat-label>\n              <input\n                matInput\n                [matDatepicker]=\"picker1\"\n                formControlName=\"dateOfDiagnosis\"\n                [(ngModel)]=\"diagnosisDate\"\n              />\n              <mat-datepicker-toggle matSuffix [for]=\"picker1\">\n              </mat-datepicker-toggle>\n              <mat-datepicker #picker1></mat-datepicker>\n            </mat-form-field>\n            <br />\n            <br />\n            <button mat-raised-button color=\"warn\" matStepperPrevious>Back</button>\n            <span> | </span>\n            <button [disabled]=\"diagnosisDate===undefined\" mat-raised-button matStepperNext color=\"primary\" (click)=\"clickDateOfDiagnosis()\">\n              Next\n            </button>\n          </form>\n        </mat-step>\n\n        <mat-step [stepControl]=\"formGroup\" *ngIf=\"newDetails.diagnosed === 'yesDiagnosed'\">\n          <form [formGroup]=\"formGroup\">\n            <ng-template matStepLabel>Step</ng-template>\n            <br />\n            <br />\n            <p>Do you currently have any symptoms related to Covid?</p>\n            <mat-radio-group formControlName=\"symptoms\" [(ngModel)]=\"newDetails.symptoms\">\n              <mat-radio-button value=\"yesSymptoms\">Yes</mat-radio-button>\n              <mat-radio-button value=\"noSymptoms\">No</mat-radio-button>\n            </mat-radio-group>\n            <br />\n            <br />\n            <button mat-raised-button color=\"warn\" matStepperPrevious>Back</button>\n            <span> | </span>\n            <button [disabled] = \"newDetails.symptoms === undefined\" mat-raised-button matStepperNext color=\"primary\" (click)=\"clickSymptoms()\">\n              Next\n            </button>\n          </form>\n        </mat-step>\n\n        <mat-step [stepControl]=\"formGroup\" *ngIf=\"newDetails.diagnosed === 'yesDiagnosed' && newDetails.symptoms === 'noSymptoms'\">\n          <form [formGroup]=\"formGroup\">\n            <ng-template matStepLabel>Step</ng-template>\n            <br />\n            <br />\n            <p>Have you tested negative for Covid?</p>\n            <mat-radio-group formControlName=\"testedNegative\" [(ngModel)]=\"newDetails.testedNegative\">\n              <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n              <mat-radio-button [value]=\"false\">No</mat-radio-button>\n            </mat-radio-group>\n            <br />\n            <br />\n            <button mat-raised-button color=\"warn\" matStepperPrevious>Back</button>\n            <span> | </span>\n            <button [disabled] = \"newDetails.testedNegative === undefined\" mat-raised-button matStepperNext color=\"primary\" (click)=\"clickTestedNegative()\">\n              Next\n            </button>\n          </form>\n        </mat-step>\n\n        <mat-step\n          [stepControl]=\"formGroup\"\n          *ngIf=\"newDetails.diagnosed === 'yesDiagnosed' && newDetails.testedNegative\"\n        >\n          <form [formGroup]=\"formGroup\">\n            <ng-template matStepLabel>Step</ng-template>\n            <br />\n            <br />\n            <p>When did you test negative for Covid?</p>\n            <mat-form-field>\n              <mat-label>Choose a date</mat-label>\n              <input\n                matInput\n                [matDatepicker]=\"picker2\"\n                formControlName=\"dateNegative\"\n                [(ngModel)]=\"negativeDate\"\n              />\n              <mat-datepicker-toggle matSuffix [for]=\"picker2\">\n              </mat-datepicker-toggle>\n              <mat-datepicker #picker2></mat-datepicker>\n            </mat-form-field>\n            <br />\n            <br />\n            <button mat-raised-button color=\"warn\" matStepperPrevious>Back</button>\n            <span> | </span>\n            <button [disabled] = \"negativeDate === undefined\" mat-raised-button matStepperNext color=\"primary\" (click)=\"clickDateNegative()\">\n              Next\n            </button>\n          </form>\n        </mat-step>\n\n        <mat-step  [stepControl] = \"formGroup\" *ngIf=\"newDetails.diagnosed === 'yesDiagnosed' && newDetails.testedNegative\">\n          <form [formGroup]=\"formGroup\">\n            <ng-template matStepLabel>Step</ng-template>\n            <br>\n          <p>Please upload your negative report.</p>\n          <br>\n          <input type=\"file\" (change) = \"upload($event)\" accept=\"*.pdf\" id=\"\">\n          <br>\n          <br>\n          <button mat-raised-button [disabled] = \"!uploadValid\" (click) = \"uploadReport()\">Upload</button>\n          <br>\n          <div *ngIf=\"uploadSuccess\">\n            <p style=\"color: lawngreen;\">File Uploaded Successfully!!</p>\n          </div>\n          <br>\n          <button mat-raised-button color=\"warn\" matStepperPrevious>Back</button>\n            <span> | </span>\n          <button [disabled] = \"!uploadSuccess\" mat-raised-button matStepperNext color=\"primary\">\n            Next\n          </button>\n          </form>\n        </mat-step>\n\n        <mat-step\n          [stepControl]=\"formGroup\"\n          *ngIf=\"newDetails.diagnosed === 'yesDiagnosed' && newDetails.testedNegative\"\n        >\n          <form [formGroup]=\"formGroup\">\n            <ng-template matStepLabel>Step</ng-template>\n            <br />\n            <br />\n            <p>Is any of your family member currently Covid Positive?</p>\n            <mat-radio-group formControlName=\"positiveFamily\" [(ngModel)]=\"newDetails.positiveFamily\">\n              <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n              <mat-radio-button [value]=\"false\">No</mat-radio-button>\n            </mat-radio-group>\n            <br />\n            <br />\n            <button mat-raised-button color=\"warn\" matStepperPrevious>Back</button>\n            <span> | </span>\n            <button [disabled] = \"newDetails.positiveFamily === undefined\" mat-raised-button matStepperNext color=\"primary\" (click)=\"clickPositiveFamily()\">\n              Next\n            </button>\n          </form>\n        </mat-step>\n\n        <mat-step [stepControl]=\"formGroup\" *ngIf=\"newDetails.diagnosed === 'yesDiagnosed'\">\n          <form [formGroup]=\"formGroup\">\n            <ng-template matStepLabel>Step</ng-template>\n            <br />\n            <br />\n            <p>Where are you currently working from?</p>\n            <mat-form-field appearance=\"outline\">\n              <input\n                matInput\n                placeholder=\"City, State\"\n                type=\"text\"\n                formControlName=\"location\"\n                [(ngModel)]=\"newDetails.location\"\n              />\n              <br />\n            </mat-form-field>\n            <br />\n            <button mat-raised-button color=\"warn\" matStepperPrevious>Back</button>\n            <span> | </span>\n            <button [disabled] = \"newDetails.location === undefined\" mat-raised-button matStepperNext color=\"primary\" (click)=\"clickLocation()\">\n              Next\n            </button>\n          </form>\n        </mat-step>\n\n        <mat-step>\n          <ng-template matStepLabel>Done</ng-template>\n          <br />\n          <br />\n          <div>\n            <div *ngIf=\"newDetails.testedNegative === true && newDetails.diagnosed === 'yesDiagnosed'\">\n              <p>Once you are eligible, you have to adhere to the following guidelines. Please make sure you read them carefully.</p>\n              <pdf-viewer [src] = \"pdfSrc\" [render-text] = \"true\"></pdf-viewer>\n            </div>\n            <br />\n            <br />\n            <div>           \n          <button mat-raised-button (click)=\"clickSubmit()\">Submit</button>\n          <span> | </span>\n              <button mat-raised-button (click) = \"stepper.reset()\" color=\"warn\">Cancel</button>\n            </div>\n          </div>\n          \n        </mat-step>\n      </mat-horizontal-stepper>\n\n      <div *ngIf=\"newDetails.diagnosed === 'noDiagnosed' && formSubmitted\">\n        <p>Please fill out the vaccination form.</p>\n      </div>\n\n      <div *ngIf=\"formSubmitted\">\n        <p>Submitted!</p>\n        <br />\n        <br />\n        <button mat-raised-button (click)=\"clickEdit()\">Edit Response</button>\n      </div>\n    </mat-card-content>\n  </mat-card>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase : {\n    apiKey: \"AIzaSyBkEhYVLMdStbVlMQgb8LwuI05lQmshig8\",\n    authDomain: \"covid-portal-authentication.firebaseapp.com\",\n    projectId: \"covid-portal-authentication\",\n    storageBucket: \"covid-portal-authentication.appspot.com\",\n    messagingSenderId: \"644379944979\",\n    appId: \"1:644379944979:web:132e457b233f2f802077e6\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, NgZone, OnInit } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { AuthService } from '../../shared/services/auth/auth.service';\nimport { Router } from '@angular/router';\nimport { EmployeeService } from 'src/app/shared/services/employee/employee.service';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Employee } from 'src/app/shared/interfaces/employee/employee';\nimport { userDetails } from 'src/app/shared/interfaces/user/userDetails';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css'],\n})\n\nexport class NavComponent implements OnInit{\n  list : Employee[];\n  userD : userDetails;\n  currentUser : userDetails\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n    ngOnInit(){\n      // this.service.getEmployees().subscribe(actionsArray => {\n      //   this.list = actionsArray.map(item => \n      //     {\n      //       return {\n      //         id: item.payload.doc.id,\n      //         ...item.payload.doc.data\n      //       } as Employee;\n      //     })\n      //     });\n\n      this.afAuth.authState.subscribe(user => {\n        this.firestore.doc(`usersData/${user.uid}`).valueChanges().subscribe(res => {\n          this.currentUser = res\n        })\n      })\n      }\n\n\n  constructor(private breakpointObserver: BreakpointObserver, public authService: AuthService,\n    public router: Router,\n    public ngZone: NgZone, private service : EmployeeService, private firestore : AngularFirestore, private afAuth: AngularFireAuth) {\n    }\n\n\n}\n","<mat-sidenav-container class=\"sidenav-container\" [hasBackdrop]=\"true\">\n  <mat-sidenav\n    #drawer\n    class=\"sidenav\"\n    fixedInViewport\n    [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n    [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n    [opened]=\"(isHandset$ | async) === true\"\n  >\n    <mat-toolbar class=\"menuHeader\" fxLayoutAlign=\"center center\"\n      >Menu</mat-toolbar\n    >\n      <mat-nav-list *ngIf=\"!currentUser?.admin\">\n        <a\n          mat-list-item\n          [routerLink]=\"['/nav/vform']\"\n          routerLinkActive=\"router-link-active\"\n          >Vaccination Form</a\n        >\n      </mat-nav-list>\n\n      <mat-nav-list *ngIf=\"!currentUser?.admin\">\n        <a\n          mat-list-item\n          [routerLink]=\"['/nav/dform']\"\n          routerLinkActive=\"router-link-active\"\n          >Diagnosis Form</a\n        >\n      </mat-nav-list>\n\n    <mat-nav-list>\n      <a\n        mat-list-item\n        [routerLink]=\"['/nav/dashboard']\"\n        routerLinkActive=\"router-link-active\"\n        *ngIf=\"currentUser?.admin\"\n        >Dashboard</a\n      >\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <mat-toolbar-row>\n        <button mat-icon-button (click)=\"drawer.toggle()\">\n          <mat-icon>menu</mat-icon>\n        </button>\n\n        <div fxFlex fxLayout fxLayoutAlign=\"flex-end center\">\n          <span *ngIf=\"(isHandset$ | async) === false\" class=\"displayName\"\n            >{{currentUser?.name }}</span\n          >\n\n          <!-- <button mat-icon-button *ngIf=\"currentUser?.admin\" [matMenuTriggerFor]=\"notifications\">\n            <mat-icon matBadge=\"3\" matBadgePosition=\"after\" matBadgeColor=\"accent\">circle_notifications</mat-icon>\n          </button> -->\n          <button mat-icon-button [matMenuTriggerFor]=\"auth\">\n            <mat-icon>person_outline</mat-icon>\n          </button>\n\n          <!-- <mat-menu class=\"notifications\" #notifications=\"matMenu\" xPosition=\"before\">\n            <mat-list>\n              <mat-list-item class=\"notification-list-item\" >\n                  <mat-icon class=\"notification-icons\">vaccines</mat-icon>\n                  Alphonse filled the vaccination form.\n              </mat-list-item>\n              <mat-divider></mat-divider>\n              <mat-list-item class=\"notification-list-item\">\n                <mat-icon class=\"notification-icons\">coronavirus</mat-icon>\n                Arnette filled the diagnosis form.\n              </mat-list-item>\n              <mat-divider></mat-divider>\n              <mat-list-item class=\"notification-list-item\">\n                <mat-icon class=\"notification-icons\">vaccines</mat-icon>\n                Andria filled the vaccination form.\n              </mat-list-item>\n            </mat-list>\n          </mat-menu> -->\n\n          <mat-menu #auth=\"matMenu\">\n            <!-- <button mat-menu-item>\n              <mat-icon>account_circle</mat-icon>\n              <span>View Profile</span>\n            </button>\n            <button mat-menu-item>\n              <mat-icon>vpn_key</mat-icon>\n              <span>Change Password</span>\n            </button> -->\n            <button mat-menu-item>\n              <mat-icon>exit_to_app</mat-icon>\n              <span (click)=\"authService.SignOut()\">Sign out</span>\n            </button>\n          </mat-menu>\n        </div>\n      </mat-toolbar-row>\n    </mat-toolbar>\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroupDirective, NgForm, Validators } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { AuthService } from 'src/app/shared/services/auth/auth.service';\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\n\nexport class ForgotPasswordComponent implements OnInit {\n\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n\n  matcher = new MyErrorStateMatcher();\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div fxLayoutAlign=\"center center\" fxFlexFill class=\"main-div\">\n    <mat-card fxFlex=\"25%\" fxFlex.xs=\"80%\" fxFlex.sm=\"50%\">\n        <mat-toolbar color=\"primary\">Recover Password</mat-toolbar>\n        <div fxLayoutAlign=\"stretch\" fxLayout=\"column\" class=\"login-form\">\n            <div class=\"header\">Enter the email address associated with your account.</div>\n            <mat-form-field class=\"email-input\">\n                <input\n                  type=\"email\"\n                  matInput\n                  [formControl]=\"emailFormControl\"\n                  [errorStateMatcher]=\"matcher\"\n                  placeholder=\"Email Id\"\n                  #userEmail\n                  #passwordResetEmail\n                />\n                <mat-error\n                  *ngIf=\"\n                    emailFormControl.hasError('email') &&\n                    !emailFormControl.hasError('required')\n                  \"\n                >\n                  Please enter a valid email address\n                </mat-error>\n                <mat-error *ngIf=\"emailFormControl.hasError('required')\">\n                  Email is <strong>required</strong>\n                </mat-error>\n              </mat-form-field>\n              <button mat-raised-button (click)=\"authService.ForgotPassword(passwordResetEmail.value)\">Send Reset link</button>\n              <div class=\"redirectToLogin\">\n                <span>Go back to <a [routerLink]=\"['/login']\" >Log in</a>?</span>\n              </div>\n        </div>\n    </mat-card>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetCovidStatsService {\n\n  constructor(private http: HttpClient) { }\n\n  getCovidStats(): Observable<any> {\n    return this.http.get<any>(\n      'https://corona.lmao.ninja/v2/countries/India?yesterday=true&strict=true&query'\n    );\n  }\n\n  getCovidNews() : Observable<any>{\n    return this.http.get<any>(\n      'https://newsapi.org/v2/top-headlines?country=in&category=health&apiKey=5130c7a1bd134235a6284b89e4321ee5'\n    )\n  }\n\n  getCovidNews2() : Observable<any>{\n    return this.http.get<any>(\n      'https://saurav.tech/NewsAPI/top-headlines/category/health/in.json'\n    )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, Route, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { User } from '../../interfaces/user/user';\nimport { userDetails } from '../../interfaces/user/userDetails';\nimport { AuthService } from '../../services/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthGuard implements CanActivate {\n  userData : User\n  userDetails : userDetails\n  answer : boolean\n  \n  constructor(\n    public afs: AngularFirestore,   // Inject Firestore service\n    public afAuth: AngularFireAuth,\n    public authService: AuthService,\n    public router: Router\n  ){ }\n\n  // canActivate(\n  //   route: ActivatedRouteSnapshot,\n  //   state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n  //     this.afAuth.authState.subscribe({\n  //       next : (user => {\n  //         if (user) {\n  //           this.userData = user;\n  //           this.afs.doc(`usersData/${this.userData.uid}`).valueChanges().subscribe(res => {\n  //             this.userDetails = res;\n  //             if(res['admin'] === false){\n  //               this.answer =true\n  //             }else{\n  //               this.answer = false\n  //             }})\n  //           } \n  //       })\n  //  })\n\n  //   return this.answer\n    \n\n  // }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if(this.authService.isLoggedIn !== true) {\n      this.router.navigate(['login'])\n    }\n    return true;\n  }\n\ncanActivateChild(\n  next: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n  if (!this.authService.userDetails?.admin) {\n    return false;\n}\nreturn true;\n}\n\n}","import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { AfterViewChecked, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport * as moment from 'moment';\nimport { Employee } from 'src/app/shared/interfaces/employee/employee';\nimport { userDetails } from 'src/app/shared/interfaces/user/userDetails';\nimport { AuthService } from 'src/app/shared/services/auth/auth.service';\nimport {AngularFireStorage} from '@angular/fire/storage'\n\n@Component({\n  selector: 'app-vaccination-form',\n  templateUrl: './vaccination-form.component.html',\n  styleUrls: ['./vaccination-form.component.css'],\n})\nexport class VaccinationFormComponent implements OnInit, AfterViewChecked {\n  isCompleted = false\n  pdfSrc  = \"https://cwi.edu/sites/default/files/file_contenttype/sop_returntowork_final_0.pdf\"\n  isLinear = false\n  currentUserId: string;\n  currentUser: userDetails;\n  currentUserDetails: Employee;\n  newDetails: Employee = {};\n  firstFormGroup: FormGroup;\n  gotFirstDose: Boolean = false;\n  gotSecondDose: Boolean = false;\n  formSubmitted: Boolean = false;\n  firstTimeResponse: Boolean = false;\n  firstDateOriginal : string;\n  secondDateOriginal : string;\n  firstPath : String\n  secondPath : String\n  uploadValidFirst = false\n  uploadValidSecond = false\n  uploadSuccessFirst = false\n  uploadSuccessSecond = false\n  \n\n  public constructor(\n    private af : AngularFireStorage,\n    private afs: AngularFirestore,\n    private afAuth: AngularFireAuth,\n    private breakpointObserver: BreakpointObserver,\n    private route: ActivatedRoute,\n    private authService: AuthService,\n    private readonly changeDetectorRef: ChangeDetectorRef\n  ) {\n    this.firstFormGroup = new FormGroup({\n      location : new FormControl(),\n      firstDose: new FormControl(),\n      firstDate: new FormControl(Validators.minLength(1)),\n      vaccine: new FormControl(),\n      secondDose: new FormControl(),\n      secondDate: new FormControl(),\n      firstReason : new FormControl(),\n      secondReason : new FormControl()\n    });\n    this.firstTimeResponse = false;\n    this.uploadSuccessFirst = false\n    this.uploadSuccessSecond = false\n  }\n\n  ngAfterViewChecked(): void {\n    this.changeDetectorRef.detectChanges();\n  }\n\n  ngOnInit(): void {\n    this.uploadValidFirst = false\n    this.uploadValidSecond = false\n    this.firstDateOriginal = null\n    this.secondDateOriginal = null\n    this.afAuth.authState.subscribe((user) => {\n      this.currentUserId = user.uid;\n      //console.log(user.uid);\n      this.afs\n        .doc(`usersData/${user.uid}`)\n        .valueChanges()\n        .subscribe((res) => {\n          this.currentUser = res;\n          this.formSubmitted = this.currentUser.vFormSubmit;\n          this.afs\n            .doc(`employees/${this.currentUser.name}`)\n            .valueChanges()\n            .subscribe((res) => {\n              this.currentUserDetails = res;\n              this.setNewDetails(res);\n            });\n        });\n    });\n  }\n\n  setNewDetails(currentUserDetails: Employee) {\n    this.newDetails.name = currentUserDetails.name;\n    this.newDetails.gender = currentUserDetails.gender;\n    this.newDetails.address = currentUserDetails.address;\n    this.newDetails.mobile = currentUserDetails.mobile;\n    this.newDetails.department = currentUserDetails.department;\n    this.newDetails.role = currentUserDetails.role;\n    this.newDetails.firstDose = currentUserDetails.firstDose;\n    this.newDetails.firstDate = currentUserDetails.firstDate;\n    this.newDetails.secondDose = currentUserDetails.secondDose;\n    this.newDetails.secondDate = currentUserDetails.secondDate;\n    this.newDetails.vaccine = currentUserDetails.vaccine;\n    this.newDetails.location = currentUserDetails.location;\n    this.newDetails.firstReason = currentUserDetails.firstReason\n    this.newDetails.secondReason = currentUserDetails.secondReason\n    //console.log(this.newDetails);\n  }\n\n  clickLocation(){\n    this.newDetails.location = this.firstFormGroup.controls['location'].value\n    //console.log(this.newDetails.location)\n  }\n\n  clickFirstDose() {\n    this.newDetails.firstDose = this.firstFormGroup.controls['firstDose'].value;\n    //console.log(this.newDetails.firstDose);\n    if (this.newDetails.firstDose == \"yesFirst\") {\n      this.gotFirstDose = true;\n    }\n  }\n\n  clickFirstDate() {\n    this.firstDateOriginal = this.firstFormGroup.controls['firstDate'].value\n    const momentDate = new Date(\n      this.firstFormGroup.controls['firstDate'].value\n    );\n    const formattedDate = moment(momentDate).format('DD/MM/YYYY');\n    this.newDetails.firstDate = formattedDate;\n    //console.log(this.newDetails.firstDate);\n  }\n\n  clickVaccine() {\n    this.newDetails.vaccine = this.firstFormGroup.controls['vaccine'].value;\n    //console.log(this.firstFormGroup.controls['vaccine'].value);\n  }\n\n  clickSecondDose() {\n    this.secondDateOriginal = this.firstFormGroup.controls['secondDose'].value\n    this.newDetails.secondDose =\n      this.firstFormGroup.controls['secondDose'].value;\n    //console.log(this.newDetails.secondDose);\n    if (this.newDetails.secondDose == \"yesSecond\") {\n      this.gotSecondDose = true;\n    }\n  }\n\n  clickSecondDate() {\n    const momentDate = new Date(\n      this.firstFormGroup.controls['secondDate'].value\n    );\n    const formattedDate = moment(momentDate).format('DD/MM/YYYY');\n    this.newDetails.secondDate = formattedDate;\n    //console.log(this.newDetails.secondDate);\n  }\n\n  clickSubmit() {\n    if(this.newDetails.firstDose === 'noFirst'){\n      this.newDetails.firstDate = \"\"\n      this.newDetails.secondDate = \"\"\n      this.newDetails.secondDose = \"noSecond\"\n      this.newDetails.secondReason = \"\"\n      this.newDetails.vaccine = \"\"\n    }else if(this.newDetails.secondDose === 'noSecond' && this.newDetails.firstDose === 'yesFirst'){\n      this.newDetails.secondDate = \"\"\n    }\n    this.afs.doc('employees/' + this.newDetails.name).update(this.newDetails);\n    this.afs\n      .doc('usersData/' + this.currentUserId)\n      .update({ vFormSubmit: true });\n    this.firstTimeResponse = true;\n  }\n\n  clickEdit(){\n    this.afs\n      .doc('usersData/' + this.currentUserId)\n      .update({ vFormSubmit: false });\n    this.firstTimeResponse = false;\n  }\n\n  uploadFirst($event){\n    this.firstPath = $event.target.files[0]\n    this.uploadValidFirst = true\n  }\n\n  uploadFirstCertificate(){\n    this.af.upload(`${'/firstDoseCertificates'}/${this.currentUserDetails.name}`, this.firstPath)\n    const ref = this.af.ref(`${'/firstDoseCertificates'}/${this.currentUserDetails.name}`)\n    this.uploadSuccessFirst = true\n  }\n\n  uploadSecond($event){\n    this.secondPath = $event.target.files[0]\n    this.uploadValidSecond = true\n  }\n\n  uploadSecondCertificate(){\n    //console.log(this.secondPath)\n    this.af.upload(`${'/secondDoseCertificates'}/${this.currentUserDetails.name}`, this.secondPath)\n    this.uploadSuccessSecond = true\n  }\n\n  downloadFirstCertificate(){\n    const ref = this.af.ref(`${'/firstDoseCertificates'}/${this.currentUserDetails.name}`)\n    var url : string\n    ref.getDownloadURL().subscribe(res => {\n      url = res\n      window.open(url)\n    })\n    \n  }\n\n}\n","<div>\n  <mat-card>\n    <mat-card-title>Vaccination Form</mat-card-title>\n    <mat-card-content>\n      <mat-horizontal-stepper #stepper linear = true *ngIf=\"!formSubmitted\" completed=false>\n        <mat-step [stepControl]=\"firstFormGroup\">\n          <form [formGroup]=\"firstFormGroup\">\n            <ng-template matStepLabel>Step</ng-template>\n            <p>Did you take your first Dose?</p>\n            <mat-radio-group\n              formControlName=\"firstDose\"\n              required\n              [(ngModel)]=\"newDetails.firstDose\"\n            >\n              <mat-radio-button value=\"yesFirst\">Yes</mat-radio-button>\n              <mat-radio-button value=\"noFirst\">No</mat-radio-button>\n            </mat-radio-group>\n            <br />\n            <br>\n            <div *ngIf=\"newDetails.firstDose === 'noFirst'\">\n              <p>Can you please provide a reason why you have not taken the first dose?</p>\n              <mat-form-field>\n                <textarea required matInput formControlName=\"firstReason\" [(ngModel)]=\"newDetails.firstReason\"></textarea>\n                <br>\n              </mat-form-field>\n            </div>\n            <br>\n            <br>\n            <button mat-raised-button matStepperPrevious color=\"warn\">Back</button> \n            <span> | </span>\n            <button [disabled] = \"newDetails.firstDose === ''\" mat-raised-button matStepperNext (click)=\"clickFirstDose()\" color=\"primary\">\n              Next\n            </button>\n          </form>\n        </mat-step>\n\n        <mat-step [stepControl]=\"firstFormGroup\" *ngIf=\"newDetails.firstDose === 'yesFirst'\">\n          <form [formGroup]=\"firstFormGroup\">\n            <ng-template matStepLabel>Step</ng-template>\n            <p>When did you get your first Dose?</p>\n            <mat-form-field>\n              <mat-label>Choose a date</mat-label>\n              <input\n              name = \"myDate\"\n                matInput\n                [matDatepicker]=\"picker\"\n                formControlName=\"firstDate\"\n                [(ngModel)]=\"firstDateOriginal\"\n              />\n              <mat-datepicker-toggle\n                matSuffix\n                [for]=\"picker\"\n              ></mat-datepicker-toggle>\n              <mat-datepicker required #picker></mat-datepicker> \n            </mat-form-field>\n            <br />\n            <br>\n            <button mat-raised-button color=\"warn\" matStepperPrevious>Back</button>\n            <span> | </span>\n            <button [disabled] = \"firstDateOriginal === null\" mat-raised-button color=\"primary\" matStepperNext (click)=\"clickFirstDate()\">\n              Next\n            </button>\n          </form>\n        </mat-step>\n\n        <mat-step  [stepControl] = \"firstFormGroup\" *ngIf=\"newDetails.firstDose === 'yesFirst'\">\n          <form [formGroup]=\"firstFormGroup\">\n            <ng-template matStepLabel>Step</ng-template>\n            <br>\n          <p>Please upload your first Dose Vaccination Certificate.</p>\n          <br>\n          <input type=\"file\" style=\"margin: 1px auto;\" (change) = \"uploadFirst($event)\" accept=\"*.pdf\" id=\"\">\n          <br>\n          <br>\n          <button *ngIf=\"uploadValidFirst\" mat-raised-button (click) = \"uploadFirstCertificate()\">Upload</button>\n          <br>\n          <div *ngIf=\"uploadSuccessFirst\">\n            <p style=\"color: lawngreen;\">File Uploaded Successfully!!</p>\n          </div>\n          <br>\n          <button mat-raised-button color=\"warn\" matStepperPrevious>Back</button>\n          <span> | </span>\n          <button [disabled] = \"!uploadSuccessFirst\" mat-raised-button color=\"primary\" matStepperNext>\n            Next\n          </button>\n          </form>\n        </mat-step>\n\n        <mat-step [stepControl]=\"firstFormGroup\" *ngIf=\"newDetails.firstDose === 'yesFirst'\">\n          <form [formGroup]=\"firstFormGroup\">\n            <ng-template matStepLabel>Step</ng-template>\n            <p>Which Vaccine did you get?</p>\n            <mat-form-field>\n              <mat-label>Vaccine</mat-label>\n              <mat-select\n                formControlName=\"vaccine\"\n                [(ngModel)]=\"newDetails.vaccine\"\n              >\n                <mat-option value=\"Covishield\">Covishield</mat-option>\n                <mat-option value=\"Covaxin\">Covaxin</mat-option>\n                <mat-option value=\"Sputnik-V\">Sputnik-V</mat-option>\n              </mat-select>\n            </mat-form-field>\n            <br />\n            <br>\n            <button mat-raised-button color=\"warn\" matStepperPrevious>Back</button>\n            <span> | </span>\n            <button [disabled] = \"newDetails.vaccine === ''\" mat-raised-button color=\"primary\" matStepperNext (click)=\"clickVaccine()\">\n              Next\n            </button>\n          </form>\n        </mat-step>\n\n        <mat-step [stepControl]=\"firstFormGroup\" *ngIf=\"newDetails.firstDose === 'yesFirst'\">\n          <form [formGroup]=\"firstFormGroup\">\n            <ng-template matStepLabel>Step</ng-template>\n            <p>Did you take your Second Dose?</p>\n            <mat-radio-group\n              formControlName=\"secondDose\"\n              [(ngModel)]=\"newDetails.secondDose\"\n            >\n              <mat-radio-button value=\"yesSecond\">Yes</mat-radio-button>\n              <mat-radio-button value=\"noSecond\">No</mat-radio-button>\n            </mat-radio-group>\n            <br />\n            <br>\n            <div *ngIf=\"newDetails.secondDose === 'noSecond'\">\n              <p>Can you please provide a reason why you have not taken the Second dose and also when are you eligible for it?</p>\n              <mat-form-field>\n                <textarea required matInput formControlName=\"secondReason\" [(ngModel)]=\"newDetails.secondReason\"></textarea>\n                <br>\n              </mat-form-field>\n            </div>\n            <br>\n            <br>\n            <button mat-raised-button color=\"warn\" matStepperPrevious>Back</button>\n            <span> | </span>\n            <button [disabled] = \"newDetails.secondDose === ''\" mat-raised-button color=\"primary\" matStepperNext (click)=\"clickSecondDose()\">\n              Next\n            </button>\n          </form>\n        </mat-step>\n\n        <mat-step\n          [stepControl]=\"firstFormGroup\"\n          *ngIf=\"newDetails.secondDose === 'yesSecond' && newDetails.firstDose === 'yesFirst'\"\n        >\n          <form [formGroup]=\"firstFormGroup\">\n            <ng-template matStepLabel>Step</ng-template>\n            <p>When did you get your Second Dose?</p>\n            <mat-form-field>\n              <mat-label>Choose a date</mat-label>\n              <input\n                matInput\n                [matDatepicker]=\"picker2\"\n                formControlName=\"secondDate\"\n                [(ngModel)]=\"secondDateOriginal\"\n              />\n              <mat-datepicker-toggle\n                matSuffix\n                [for]=\"picker2\"\n              ></mat-datepicker-toggle>\n              <mat-datepicker required #picker2></mat-datepicker>\n            </mat-form-field>\n            <br />\n            <br>\n            <button mat-raised-button color=\"warn\" matStepperPrevious>Back</button>\n            <span> | </span>\n            <button [disabled] = \"secondDateOriginal === null\" mat-raised-button color=\"primary\" matStepperNext (click)=\"clickSecondDate()\">\n              Next\n            </button>\n          </form>\n        </mat-step>\n\n        <mat-step  [stepControl] = \"firstFormGroup\" *ngIf=\"newDetails.secondDose === 'yesSecond' && newDetails.firstDose === 'yesFirst'\">\n          <form [formGroup]=\"firstFormGroup\">\n            <ng-template matStepLabel>Step</ng-template>\n            <br>\n          <p>Please upload your Second Dose Vaccination Certificate.</p>\n          <br>\n          <input type=\"file\" style=\"margin: 1px auto;\" (change) = \"uploadSecond($event)\" accept=\"*.pdf\" id=\"\">\n          <br>\n          <br>\n          <button *ngIf=\"uploadValidSecond\" mat-raised-button (click) = \"uploadSecondCertificate()\">Upload</button>\n          <br>\n          <div *ngIf=\"uploadSuccessSecond\">\n            <p style=\"color: lawngreen;\">File Uploaded Successfully!!</p>\n          </div>\n          <br>\n          <button mat-raised-button color=\"warn\" matStepperPrevious>Back</button>\n          <span> | </span>\n          <button [disabled] = \"!uploadSuccessSecond\" mat-raised-button color=\"primary\" matStepperNext>\n            Next\n          </button>\n          </form>\n        </mat-step>\n\n        <mat-step [stepControl] = \"firstFormGroup\">\n          <form [formGroup]=\"firstFormGroup\">\n            <ng-template matStepLabel>Step</ng-template>\n            <br>\n            <br>\n            <p>Where are you currently working from?</p>\n            <mat-form-field>\n              <input matInput placeholder=\"City, State\" type=\"text\" formControlName=\"location\" [(ngModel)]=\"newDetails.location\">\n              <br>\n            </mat-form-field>\n            <br>\n            <br>\n            <button mat-raised-button color=\"warn\" matStepperPrevious>Back</button>\n            <span> | </span>\n            <button [disabled]=\"newDetails.location === ''\" mat-raised-button color=\"primary\" matStepperNext (click)=\"clickLocation()\">\n              Next\n            </button>\n          </form>\n        </mat-step>\n\n        <mat-step>\n          <ng-template matStepLabel>Step</ng-template>\n          <br>\n          <br>\n          <div>\n            <div *ngIf=\"newDetails.secondDose === 'yesSecond' && newDetails.firstDose === 'yesFirst'\">\n              <p>Once you are eligible, you have to adhere to the following guidelines. Please make sure you read them carefully.</p>\n              <pdf-viewer [src] = \"pdfSrc\" [render-text] = \"true\"></pdf-viewer>\n            </div>\n            <br>\n            <br>\n            <div>\n              <button mat-raised-button (click)=\"clickSubmit()\" color=\"primary\">Submit</button>\n              <span> | </span>\n              <button mat-raised-button (click) = \"stepper.reset()\" color=\"warn\">Cancel</button>\n            </div>\n          </div>\n          \n          \n        </mat-step>\n      </mat-horizontal-stepper>\n\n      <div *ngIf=\"firstTimeResponse\">\n        <p>Thank you for your Response!</p>\n        <button mat-raised-button (click)=\"clickEdit()\">Edit</button>\n      </div>\n      <div *ngIf=\"formSubmitted && !firstTimeResponse\">\n        <p>You have already submitted the form.</p>\n        <button mat-raised-button (click)=\"clickEdit()\">Edit</button>\n      </div>\n    </mat-card-content>\n  </mat-card>\n</div>\n\n<!-- <div>\n  <label for=\"Certificate\">Certificate File</label>\n  <input type=\"file\" (change) = \"upload($event)\" accept=\"*.pdf\" id=\"\">\n  <button (click) = \"uploadCertificate()\">Upload</button>\n</div> -->\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'covid-vaccination-portal';\n}\n","<router-outlet></router-outlet>","import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { ChangeDetectorRef, Component, NgZone, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { AngularFireStorage } from '@angular/fire/storage';\nimport { Router } from '@angular/router';\nimport * as moment from 'moment';\nimport { OwlOptions } from 'ngx-owl-carousel-o';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { Article } from 'src/app/shared/interfaces/covid-news/article';\nimport { Results } from 'src/app/shared/interfaces/covid-news/results';\nimport { Stats } from 'src/app/shared/interfaces/covid-stats/stats';\nimport { Employee } from 'src/app/shared/interfaces/employee/employee';\nimport { userDetails } from 'src/app/shared/interfaces/user/userDetails';\nimport { AuthService } from 'src/app/shared/services/auth/auth.service';\nimport { EmployeeService } from 'src/app/shared/services/employee/employee.service';\nimport { GetCovidStatsService } from 'src/app/shared/services/get-covid-stats/get-covid-stats.service';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.css']\n})\nexport class HomepageComponent implements OnInit {\n\n  \n  employee : Employee;\n  list : Employee[];\n  userD : userDetails;\n  currentUser : userDetails\n  casesCount: number = 0;\n  recoveredCount: number = 0;\n  deathsCount: number = 0;\n  activeCount: number = 0;\n  covidStats: Stats;\n  news : Article[]\n  news2 : Results[]\n\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  constructor(private af : AngularFireStorage, private breakpointObserver: BreakpointObserver, public authService: AuthService,\n    public router: Router,\n    public ngZone: NgZone, private service : EmployeeService, private firestore : AngularFirestore, private afAuth: AngularFireAuth,\n    private getStats: GetCovidStatsService,\n    private changeDetectorRef: ChangeDetectorRef) { }\n\n    cardLayout = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n      map(({ matches }) => {\n        if (matches) {\n          return {\n            columns: 1,\n            news: {cols : 1, rows : 5},\n            stats: {cols : 1, rows: 4},\n            miniCard: { cols: 1, rows: 1 },\n            chart: { cols: 1, rows: 5 },\n            table: { cols: 1, rows: 4 },\n          };\n        }\n  \n        return {\n          columns: 5,\n          news : {cols: 1, rows: 4},\n          stats : {cols: 3, rows: 2},\n          miniCard: { cols: 1, rows: 2 },\n          chart: { cols: 3, rows: 2 },\n          table: { cols: 1, rows: 2 },\n        };\n      })\n    );\n    \n  ngOnInit(): void {\n    this.afAuth.authState.subscribe(user => {\n      this.firestore.doc(`usersData/${user.uid}`).valueChanges().subscribe(res => {\n        this.currentUser = res\n        this.firestore.collection('employees').doc(this.currentUser.name).valueChanges().subscribe(res => {\n          this.employee = res;\n          console.log(this.employee)\n        })\n      })\n    })\n\n    this.getStats.getCovidNews().subscribe((data) => {\n      this.news = data.articles\n      // console.log(this.news)\n    })\n\n    this.getStats.getCovidNews2().subscribe((data) => {\n      this.news2 = data.articles\n      console.log(this.news2)\n    })\n\n    this.getStats.getCovidStats().subscribe((data) => {\n      this.covidStats = data;\n      this.changeDetectorRef.markForCheck();\n\n      let casesCountStop: any = setInterval(() => {\n        this.casesCount++;\n        if (this.casesCount == Math.floor(this.covidStats.cases / 100000)) {\n          clearInterval(casesCountStop);\n        }\n      }, 10);\n\n      let activeCountStop: any = setInterval(() => {\n        this.activeCount++;\n        if (this.activeCount == Math.floor(this.covidStats.active / 100000)) {\n          clearInterval(activeCountStop);\n        }\n      }, 30);\n\n      let recoveredCountStop: any = setInterval(() => {\n        this.recoveredCount++;\n        if (\n          this.recoveredCount == Math.floor(this.covidStats.recovered / 100000)\n        ) {\n          clearInterval(recoveredCountStop);\n        }\n      }, 10);\n\n      let deathCountStop: any = setInterval(() => {\n        this.deathsCount++;\n        if (this.deathsCount == Math.floor(this.covidStats.deaths / 100000)) {\n          clearInterval(deathCountStop);\n        }\n      }, 30);\n    });\n  }\n\n  getAge(dob : string) : number{\n    var dateMomentObject = moment(dob, \"DD/MM/YYYY\")\n    var dateObject = dateMomentObject.toDate()\n    var years = moment().diff(dateObject, 'years', false)\n    return years\n  }\n\n  firstDoseCertificate(){\n    const ref = this.af.ref(`${'/firstDoseCertificates'}/${this.employee.name}`)\n    ref.getDownloadURL().subscribe(res => {\n      window.open(res)\n    })\n  }\n\n  secondDoseCertificate(){\n    const ref = this.af.ref(`${'/secondDoseCertificates'}/${this.employee.name}`)\n    ref.getDownloadURL().subscribe(res => {\n      window.open(res)\n    })\n  }\n\n  negativeTestCertificate(){\n    const ref = this.af.ref(`${'/negativeReports'}/${this.employee.name}`)\n    ref.getDownloadURL().subscribe(res => {\n      window.open(res)\n    })\n  }\n\n}\n","<div class=\"grid-container\">\n  <mat-grid-list cols=\"{{ (cardLayout | async)?.columns }}\" rowHeight=\"200px\">\n    <mat-grid-tile\n      [colspan]=\"(cardLayout | async)?.table.cols\"\n      [rowspan]=\"(cardLayout | async)?.table.rows\"\n    >\n      <app-card>\n        <div>\n          <div\n            class=\"container\"\n            fxLayout=\"column\"\n            fxLayoutAlign=\"center center\"\n          >\n            <img\n              src=\"../../../assets/employee.jpg\"\n              alt=\"\"\n              class=\"profile-image\"\n            />\n            <div class=\"profile-name\">{{ employee?.name }}</div>\n            <div class=\"profile-role\">\n              <span>Role :</span> {{ employee?.role }}\n            </div>\n            <div class=\"profile-department\">\n              <span>Department :</span> {{ employee?.department }}\n            </div>\n          </div>\n        </div>\n      </app-card>\n    </mat-grid-tile>\n\n    <mat-grid-tile\n      [colspan]=\"(cardLayout | async)?.chart.cols\"\n      [rowspan]=\"(cardLayout | async)?.chart.rows\"\n    >\n      <mat-card class=\"dashboard-card\">\n        <mat-card-content class=\"dashboard-card-content\">\n          <mat-tab-group mat-align-tabs=\"center\">\n            <mat-tab>\n              <ng-template mat-tab-label>\n                <div\n                  fxLayout=\"row\"\n                  fxLayoutGap=\"3px\"\n                  fxLayoutAlign=\"center center\"\n                >\n                  <div>\n                    <mat-icon>person</mat-icon>\n                  </div>\n                  <div>General</div>\n                </div>\n              </ng-template>\n              <mat-list>\n                <mat-list-item\n                  ><p>\n                    <br />\n                    <b>EMPLOYEE ID : </b> {{ employee?.empid }} <br /></p\n                ></mat-list-item>\n                <mat-divider></mat-divider>\n                <mat-list-item\n                  ><p>\n                    <br />\n                    <b>NAME : </b> {{ employee?.name }} <br /></p\n                ></mat-list-item>\n                <mat-divider></mat-divider>\n                <mat-list-item\n                  ><p><br /><b>GENDER : </b> {{ employee?.gender }} <br /></p\n                ></mat-list-item>\n                <mat-divider></mat-divider>\n                <mat-list-item\n                  ><p><br /><b>AGE : </b> {{ getAge(employee?.dob) }} <br /></p\n                ></mat-list-item>\n                <mat-divider></mat-divider>\n                <mat-list-item\n                  ><p><br /><b>MOBILE : </b> {{ employee?.mobile }} <br /></p\n                ></mat-list-item>\n                <mat-divider></mat-divider>\n                <mat-list-item\n                  ><p>\n                    <br /><b>LOCATION : </b> {{ employee?.location }}\n                  </p></mat-list-item\n                >\n              </mat-list>\n            </mat-tab>\n\n            <mat-tab>\n              <ng-template mat-tab-label>\n                <div\n                  fxLayout=\"row\"\n                  fxLayoutGap=\"3px\"\n                  fxLayoutAlign=\"center center\"\n                >\n                  <div>\n                    <mat-icon>edit</mat-icon>\n                  </div>\n                  <div>Forms</div>\n                </div>\n              </ng-template>\n              <mat-list>\n                <a\n                  mat-list-item\n                  [routerLink]=\"['/employee/vform']\"\n                  routerLinkActive=\"router-link-active\"\n                  style=\"text-decoration: none; color: cornflowerblue\"\n                  ><mat-icon>arrow_right_alt</mat-icon> Vaccination Form</a\n                >\n\n                <mat-divider></mat-divider>\n                <a\n                  mat-list-item\n                  [routerLink]=\"['/employee/dform']\"\n                  routerLinkActive=\"router-link-active\"\n                  style=\"text-decoration: none; color: cornflowerblue\"\n                  ><mat-icon>arrow_right_alt</mat-icon>Diagnosis Form</a\n                >\n              </mat-list>\n            </mat-tab>\n          </mat-tab-group>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n\n    <mat-grid-tile\n      [colspan]=\"(cardLayout | async)?.news.cols\"\n      [rowspan]=\"(cardLayout | async)?.news.rows\"\n    >\n      <app-card>\n        <div fxLayout=\"column\" fxLayoutGap=\"3px\" fxLayoutAlign=\"center center\">\n          <div>\n            <h2>INDIA COVID STATUS</h2>\n          </div>\n          <div>\n            <h2><mat-icon>description</mat-icon></h2>\n          </div>\n        </div>\n        <div class=\"container\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n          <br />\n          <div\n            fxLayout=\"column\"\n            fxLayoutGap=\"70px\"\n            fxLayoutAlign=\"space-between center\"\n          >\n            <div class=\"cases\">\n              <p class=\"casesData\">{{ casesCount + \" L\" }}</p>\n              <p>Total Cases</p>\n            </div>\n\n            <div class=\"activeCases\">\n              <p class=\"activeData\">{{ activeCount + \" L\" }}</p>\n              <p>Active Cases</p>\n            </div>\n\n            <div class=\"recovered\">\n              <p class=\"recoveredData\">{{ recoveredCount + \" L\" }}</p>\n              <p>Total Recovered</p>\n            </div>\n\n            <div class=\"deaths\">\n              <p class=\"deathsData\">{{ deathsCount + \" L\" }}</p>\n              <p>Total Deaths</p>\n            </div>\n          </div>\n        </div>\n      </app-card>\n    </mat-grid-tile>\n\n    <mat-grid-tile\n      [colspan]=\"(cardLayout | async)?.miniCard.cols\"\n      [rowspan]=\"(cardLayout | async)?.miniCard.rows\"\n    >\n      <app-card>\n        <div>\n          <div fxLayout=\"row\" fxLayoutGap=\"3px\" fxLayoutAlign=\"center center\">\n            <div>\n              <h2>Vaccination Status</h2>\n            </div>\n            <div>\n              <h2><mat-icon>vaccines</mat-icon></h2>\n            </div>\n          </div>\n\n          <div\n            class=\"container\"\n            fxLayout=\"column\"\n            fxLayoutAlign=\"center center\"\n          >\n            <div>\n              <p>\n                <b> First Dose : </b\n                ><span *ngIf=\"employee?.firstDose === 'yesFirst'\">Done</span>\n                <span\n                  *ngIf=\"\n                    employee?.firstDose === 'noFirst' ||\n                    employee?.firstDose === ''\n                  \"\n                  >Pending</span\n                >\n              </p>\n            </div>\n            <div>\n              <p>\n                <b> Second Dose : </b\n                ><span *ngIf=\"employee?.secondDose === 'yesSecond'\">Done</span>\n                <span\n                  *ngIf=\"\n                    employee?.secondDose === 'noSecond' ||\n                    employee?.secondDose === ''\n                  \"\n                  >Pending</span\n                >\n              </p>\n            </div>\n            <div>\n              <p>\n                <b> Vaccine Taken : </b>\n                <span *ngIf=\"employee?.vaccine === ''\">None</span>\n                <span *ngIf=\"employee?.vaccine !== ''\">{{employee?.vaccine}}</span>\n              </p>\n            </div>\n\n          </div>\n        </div>\n      </app-card>\n    </mat-grid-tile>\n\n    <mat-grid-tile\n      [colspan]=\"(cardLayout | async)?.stats.cols\"\n      [rowspan]=\"(cardLayout | async)?.stats.rows\"\n    >\n      <app-card>\n        <div>\n          <h2>Latest in healthcare</h2>\n\n          <br />\n          <carousel\n            [cellsToScroll]=\"3\"\n            [loop]=\"true\"\n            [autoplay]=\"true\"\n            [autoplayInterval]=\"4000\"\n            [margin]=\"20\"\n            [arrowsTheme]=\"'dark'\"\n            [height] = \"250\"\n            [cellWidth] = \"150\"\n          >\n            <div class=\"carousel-cell\" *ngFor=\"let new of news2\">\n              <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n                <div>\n                  <a [href]=\"new.url\" target=\"_blank\"\n                    ><img\n                      [src]=\"new.urlToImage\"\n                      [alt]=\"new.title\"\n                      class=\"newsImage\"\n                      onerror=\"this.src = 'https://developers.google.com/maps/documentation/maps-static/images/error-image-generic.png'\"\n                    />\n                  </a>\n                </div>\n                <div>\n                  <a [href]=\"new.url\" style=\"text-decoration: none\"\n                    ><h5>{{ new.title }}</h5></a\n                  >\n                </div>\n              </div>\n            </div>\n          </carousel>\n        </div>\n      </app-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CardComponent } from './card/card.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material/material.module';\nimport { NavComponent } from './components/nav/nav.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { ChartsModule } from 'ng2-charts';\nimport { DashboardComponent } from './components/nav/dashboard/dashboard.component';\nimport { EmployeeDetailsPageComponent } from './employee-details-page/employee-details-page.component';\nimport { RouterModule } from '@angular/router';\n// import { EmployeeProfileCardComponent } from './employee-details-page/employee-profile-card/employee-profile-card.component';\n// import { EmployeeVaccinationCardComponent } from './employee-details-page/employee-vaccination-card/employee-vaccination-card.component';\nimport { LoginPageComponent } from './components/authentication/login-page/login-page.component';\nimport { AngularFireModule } from \"@angular/fire\";\nimport { AngularFireAuthModule } from \"@angular/fire/auth\";\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { environment } from '../environments/environment';\nimport { ForgotPasswordComponent } from './components/authentication/forgot-password/forgot-password.component';\nimport { AuthService } from './shared/services/auth/auth.service';\nimport { DataChartsModule } from './charts/data-charts.module';\nimport { EmployeeService } from './shared/services/employee/employee.service';\n// import { EmployeesListComponent } from './components/employees-list/employees-list.component';\n// import { DetailsFormComponent } from './employee-details-page/details-form/details-form.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatCardModule } from '@angular/material/card';\nimport { VaccinationFormComponent } from './components/vaccination-form/vaccination-form.component';\nimport { DiagnosisFormComponent } from './components/diagnosis-form/diagnosis-form.component';\nimport { MatTableExporterModule } from 'mat-table-exporter';\nimport { PdfViewerModule } from 'ng2-pdf-viewer';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { EmployeeComponent } from './components/employee/employee.component';\nimport { HomepageComponent } from './components/employee/homepage/homepage.component';\nimport { HttpClientModule } from '@angular/common/http';\n// import { CarouselModule } from 'ngx-owl-carousel-o';\nimport { CarouselModule, MDBBootstrapModule, WavesModule } from 'angular-bootstrap-md';\nimport { IvyCarouselModule } from 'angular-responsive-carousel';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    CardComponent,\n    DashboardComponent,\n    EmployeeDetailsPageComponent,\n    // EmployeeProfileCardComponent,\n    // EmployeeVaccinationCardComponent,\n    LoginPageComponent,\n    ForgotPasswordComponent,\n    // EmployeesListComponent,\n    // DetailsFormComponent,\n    VaccinationFormComponent,\n    DiagnosisFormComponent,\n    AdminComponent,\n    EmployeeComponent,\n    HomepageComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule,\n    LayoutModule,\n    ChartsModule,\n    RouterModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n    DataChartsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatCardModule,\n    MatTableExporterModule,\n    PdfViewerModule,\n    MDBBootstrapModule,\n    CarouselModule,\n    WavesModule,\n    HttpClientModule,\n    IvyCarouselModule\n    \n  ],\n  providers: [AuthService, EmployeeService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div fxLayout=\"column\" fxLayoutAlign=\"space-evenly center\" fxLayoutGap=\"60px\" *ngIf=\"isDataAvailable\">\n  <div class=\"chartContainer\" style=\"display: block\">\n    <canvas\n      baseChart\n      [data]=\"doughnutChartData\"\n      [labels]=\"doughnutChartLabels\"\n      [chartType]=\"doughnutChartType\"\n      [legend]=\"true\"\n      [options]=\"options\"\n    >\n    </canvas>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ChartOptions, ChartType } from 'chart.js';\nimport { Label, MultiDataSet, SingleDataSet } from 'ng2-charts';\nimport { EmployeeService } from 'src/app/shared/services/employee/employee.service';\n\n@Component({\n  selector: 'app-diagnosis-chart',\n  templateUrl: './diagnosis-chart.component.html',\n  styleUrls: ['./diagnosis-chart.component.css'],\n})\nexport class DiagnosisChartComponent implements OnInit {\n  public testedNegativeCount = 0\n  public diagnosedCount = 0\n  public isDataAvailable = false\n  // Doughnut\n  public doughnutChartLabels: Label[] = [\n    'Currently diagnosed',\n    'Antibodies Present',\n  ];\n  public doughnutChartData: SingleDataSet\n  public doughnutChartType: ChartType = 'doughnut';\n\n  public options: any = {\n    legend: {\n      position: 'bottom',\n    },\n    layout: {\n      padding: '20px',\n    },\n  };\n\n  constructor(private service: EmployeeService) {}\n\n  ngOnInit() {\n    this.service.testedNegativeValueChange.subscribe(res => {\n      this.testedNegativeCount = res\n      //console.log(res)\n    })\n    this.service.diagnosedValueChange.subscribe(res => this.diagnosedCount = res)\n\n    setTimeout(()=> this.setData(this.testedNegativeCount, this.diagnosedCount), 3000)  \n\n  }\n\n  setData(tnc : number, dc: number){\n    this.doughnutChartData = [dc, tnc]\n    this.isDataAvailable = true\n  }\n}\n","import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Component, NgZone, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { Employee } from 'src/app/shared/interfaces/employee/employee';\nimport { userDetails } from 'src/app/shared/interfaces/user/userDetails';\nimport { AuthService } from 'src/app/shared/services/auth/auth.service';\nimport { EmployeeService } from 'src/app/shared/services/employee/employee.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n  list : Employee[];\n  userD : userDetails;\n  currentUser : userDetails\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver, public authService: AuthService,\n    public router: Router,\n    public ngZone: NgZone, private service : EmployeeService, private firestore : AngularFirestore, private afAuth: AngularFireAuth) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-sidenav-container class=\"sidenav-container\" [hasBackdrop]=\"true\">\n    <mat-sidenav\n      #drawer\n      class=\"sidenav\"\n      fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === true\"\n    >\n      <mat-toolbar class=\"menuHeader\" fxLayoutAlign=\"center center\"\n        >Menu</mat-toolbar\n      >\n        <!-- <mat-nav-list *ngIf=\"!currentUser?.admin\">\n          <a\n            mat-list-item\n            [routerLink]=\"['/employee/vform']\"\n            routerLinkActive=\"router-link-active\"\n            >Vaccination Form</a\n          >\n        </mat-nav-list>\n  \n        <mat-nav-list *ngIf=\"!currentUser?.admin\">\n          <a\n            mat-list-item\n            [routerLink]=\"['/employee/dform']\"\n            routerLinkActive=\"router-link-active\"\n            >Diagnosis Form</a\n          >\n        </mat-nav-list> -->\n  \n      <mat-nav-list>\n        <a\n          mat-list-item\n          [routerLink]=\"['/nav/dashboard']\"\n          routerLinkActive=\"router-link-active\"\n          *ngIf=\"currentUser?.admin\"\n          >Dashboard</a\n        >\n      </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content>\n      <mat-toolbar color=\"primary\">\n        <mat-toolbar-row>\n          <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n            <div>\n              <button mat-icon-button [routerLink]=\"['/admin/dashboard']\" routerLinkActive=\"router-link-active\" >\n                <mat-icon>home</mat-icon>\n                </button>\n            </div>\n            <div>\n              <span style=\"font-size: medium;\">Admin Portal</span>\n              \n            </div>\n          </div>\n          \n          <!-- <button mat-icon-button (click)=\"drawer.toggle()\">\n            <mat-icon>menu</mat-icon>\n          </button> -->\n  \n          <div fxFlex fxLayout fxLayoutAlign=\"flex-end center\">\n            <span *ngIf=\"(isHandset$ | async) === false\" class=\"displayName\"\n              >{{currentUser?.name }}</span\n            >\n  \n            <!-- <button mat-icon-button *ngIf=\"currentUser?.admin\" [matMenuTriggerFor]=\"notifications\">\n              <mat-icon matBadge=\"3\" matBadgePosition=\"after\" matBadgeColor=\"accent\">circle_notifications</mat-icon>\n            </button> -->\n            <button mat-icon-button [matMenuTriggerFor]=\"auth\">\n              <mat-icon>person_outline</mat-icon>\n            </button>\n  \n            <!-- <mat-menu class=\"notifications\" #notifications=\"matMenu\" xPosition=\"before\">\n              <mat-list>\n                <mat-list-item class=\"notification-list-item\" >\n                    <mat-icon class=\"notification-icons\">vaccines</mat-icon>\n                    Alphonse filled the vaccination form.\n                </mat-list-item>\n                <mat-divider></mat-divider>\n                <mat-list-item class=\"notification-list-item\">\n                  <mat-icon class=\"notification-icons\">coronavirus</mat-icon>\n                  Arnette filled the diagnosis form.\n                </mat-list-item>\n                <mat-divider></mat-divider>\n                <mat-list-item class=\"notification-list-item\">\n                  <mat-icon class=\"notification-icons\">vaccines</mat-icon>\n                  Andria filled the vaccination form.\n                </mat-list-item>\n              </mat-list>\n            </mat-menu> -->\n  \n            <mat-menu #auth=\"matMenu\">\n              <!-- <button mat-menu-item>\n                <mat-icon>account_circle</mat-icon>\n                <span>View Profile</span>\n              </button>\n              <button mat-menu-item>\n                <mat-icon>vpn_key</mat-icon>\n                <span>Change Password</span>\n              </button> -->\n              <button mat-menu-item>\n                <mat-icon>exit_to_app</mat-icon>\n                <span (click)=\"authService.SignOut()\">Sign out</span>\n              </button>\n            </mat-menu>\n          </div>\n        </mat-toolbar-row>\n      </mat-toolbar>\n      <router-outlet></router-outlet>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n  \n\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { setClassMetadata } from '@angular/core/src/r3_symbols';\nimport { ChartOptions, ChartType } from 'chart.js';\nimport { BaseChartDirective, Label, SingleDataSet } from 'ng2-charts';\nimport { Subscription } from 'rxjs';\nimport { EmployeeService } from 'src/app/shared/services/employee/employee.service';\n\n@Component({\n  selector: 'app-status-chart',\n  templateUrl: './status-chart.component.html',\n  styleUrls: ['./status-chart.component.css'],\n})\nexport class StatusChartComponent implements OnInit {\n  @ViewChild(BaseChartDirective) chart: BaseChartDirective\n  public pieChartOptions: ChartOptions = {\n    responsive: true,\n  };\n  public eligibleCount = 1\n  public nonEligibleCount = 2\n  public pendingResponseCount = 3\n  public pieChartLabels: Label[] = ['Eligible', 'Not Eligible', 'Pending Response'];\n  public pieChartData: SingleDataSet\n  public pieChartType: ChartType = 'pie';\n  public pieChartLegend = true;\n  public pieChartPlugins = [];\n  public _subscription = new Subscription()\n  public isDataAvailable = false\n\n  public options: any = {\n    legend: {\n      position: 'bottom',\n    },\n  };\n\n  constructor(private service : EmployeeService) {\n    \n  }\n\n  ngOnInit() {\n    this.service.eligibleValueChange.subscribe(res => {\n      this.eligibleCount = res\n      //console.log(this.eligibleCount)\n    })\n\n    this.service.nonEligibleValueChange.subscribe(res => {\n      this.nonEligibleCount = res\n    })\n\n    this.service.pendingValueChange.subscribe(res => {\n      this.pendingResponseCount  = res\n    })\n\n    setTimeout(()=> this.setData(this.eligibleCount, this.nonEligibleCount, this.pendingResponseCount), 3000)  \n  }\n\n  setData(ec : number, nec: number, pc: number){\n    this.pieChartData = [ec, nec, pc]\n    this.isDataAvailable = true\n  }\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"space-evenly center\" fxLayoutGap=\"60px\" *ngIf=\"isDataAvailable\">\n  \n  <div class=\"chartContainer\" style=\"display: block\">\n    <canvas \n      baseChart\n      [data]=\"pieChartData\"\n      [labels]=\"pieChartLabels\"\n      [chartType]=\"pieChartType\"\n      [options]=\"pieChartOptions\"\n      [plugins]=\"pieChartPlugins\"\n      [legend]=\"pieChartLegend\"\n      [options]=\"options\"\n    >\n    </canvas>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CdkStepperModule } from '@angular/cdk/stepper';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { MatFormField, MatFormFieldModule } from '@angular/material/form-field';\n\nconst MaterialComponents = [\n  MatStepperModule,\n  A11yModule,\n  ClipboardModule,\n  CdkStepperModule,\n  CdkTableModule,\n  CdkTreeModule,\n  DragDropModule,\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatStepperModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n  OverlayModule,\n  PortalModule,\n  ScrollingModule,\n  \n];\n\n@NgModule({\n  imports: [MaterialComponents],\n  exports: [MaterialComponents],\n})\nexport class MaterialModule {}\n","import { Injectable, NgZone } from '@angular/core';\nimport { AngularFireAuth } from \"@angular/fire/auth\";\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\nimport { Router } from \"@angular/router\";\nimport * as firebase from 'firebase';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { User } from '../../interfaces/user/user';\nimport { of } from 'rxjs';\nimport { userDetails } from '../../interfaces/user/userDetails';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n  userData: User; // Save logged in user data\n  auth = firebase.default.auth;\n  userDat : Observable<User>;\n  userDetails : userDetails;\n\n  constructor(\n    public afs: AngularFirestore,   // Inject Firestore service\n    public afAuth: AngularFireAuth, // Inject Firebase auth service\n    public router: Router,\n    public ngZone: NgZone // NgZone service to remove outside scope warning\n  ) {\n    /* Saving user data in localstorage when\n    logged in and setting up null when logged out */\n\n    this.userDat = this.afAuth.authState.pipe(switchMap(user => {\n      if(user){\n        return this.afs.doc<User>(`users/${user.uid}`).valueChanges()\n      }else{\n        return of(null);\n      }\n    }))\n    this.afAuth.authState.subscribe(user => {\n      if (user) {\n        this.userData = user;\n        this.afs.doc(`usersData/${this.userData.uid}`).valueChanges().subscribe(res => {\n          this.userDetails = res;\n          if(res['admin'] === true){\n            // this.router.navigate(['/nav/dashboard']);\n            this.router.navigate(['/admin/dashboard'])\n            console.log(localStorage.getItem('user'))\n          }else{\n            // this.router.navigate(['/nav']);\n            this.router.navigate(['/employee/homepage'])\n          }\n        })\n\n        localStorage.setItem('user', JSON.stringify(this.userData));\n        JSON.parse(localStorage.getItem('user'));\n      } else {\n        localStorage.setItem('user', null);\n        JSON.parse(localStorage.getItem('user'));\n      }\n    })\n  }\n\n  SendVerificationMail() {\n    return this.afAuth.currentUser.then(u => u.sendEmailVerification())\n    .then(() => {\n    })\n  }\n\n  // Sign in with email/password\n  async SignIn(email, password) {\n    await this.afAuth.signInWithEmailAndPassword(email, password)\n      .then((result) => {\n          console.log(result.user);\n          this.afs.doc(`usersData/${result.user.uid}`).valueChanges().subscribe(res => {\n            this.userDetails = res;\n            if(res['admin'] === true){\n              // this.router.navigate(['/nav/dashboard']);\n              this.router.navigate(['/admin/dashboard'])\n              setTimeout(()=> window.location.reload(), 3000)\n            }else{\n              // this.router.navigate(['/nav']);\n            this.router.navigate(['/employee/homepage'])\n            }\n          })\n        this.SetUserData(result.user);\n      }).catch((error) => {\n        window.alert(error.message)\n      })\n  }\n\n  // Reset Forggot password\n  ForgotPassword(passwordResetEmail) {\n    return this.afAuth.sendPasswordResetEmail(passwordResetEmail)\n    .then(() => {\n      window.alert('Password reset email sent, check your inbox.');\n    }).catch((error) => {\n      window.alert(error)\n    })\n  }\n\n  // Returns true when user is looged in and email is verified\n  get isLoggedIn(): boolean {\n    const user = JSON.parse(localStorage.getItem('user'));\n    return (user !== null && user.emailVerified !== false) ? true : false;\n  }\n\n  // Auth logic to run auth providers\n  async AuthLogin(provider) {\n    await this.afAuth.signInWithPopup(provider)\n    .then((result) => {\n      this.SetUserData(result.user);\n      setTimeout(() => {\n        this.afs.doc(`usersData/${result.user.uid}`).valueChanges().subscribe(res => {\n          this.userDetails = res;\n          if(res['admin'] === true){\n            // this.router.navigate(['/nav/dashboard']);\n            this.router.navigate(['/admin/dashboard'])\n            setTimeout(()=> window.location.reload(), 3000)\n          }else{\n            // this.router.navigate(['/nav']);\n            this.router.navigate(['/employee/homepage'])\n          }\n        })\n      }, 5000)\n      \n    }).catch((error) => {\n      window.alert(error)\n    })\n  }\n\n  /* Setting up user data when sign in with username/password,\n  sign up with username/password and sign in with social auth\n  provider in Firestore database using AngularFirestore + AngularFirestoreDocument service */\n  SetUserData(user) {\n    user.updateProfile({\n    //   displayName : \"Ronak\"\n        emailVerified : true\n    })\n    const userRef: AngularFirestoreDocument<any> = this.afs.doc(`users/${user.uid}`);\n    const nameRef : AngularFirestoreDocument<any> = this.afs.doc(`usersData/${user.uid}`);\n    const userData: User = {\n      uid: user.uid,\n      email: user.email,\n      displayName: user.displayName,\n      photoURL: user.photoURL,\n      emailVerified: user.emailVerified,\n    }\n    return userRef.set(userData, {\n      merge: true\n    })\n\n  }\n\n  // Sign out\n  SignOut() {\n    return this.afAuth.signOut().then(() => {\n      this.userDetails = null;\n      localStorage.removeItem('user');\n      this.router.navigate(['login']);\n    })\n  }\n\n}","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css'],\n})\nexport class CardComponent implements OnInit {\n  @Input() title: string;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<mat-card class=\"dashboard-card\">\n  <mat-card-content class=\"dashboard-card-content\">\n    <ng-content></ng-content>\n  </mat-card-content>\n</mat-card>\n","import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Component, EventEmitter, HostListener, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroupDirective, NgForm, Validators } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { map, throttleTime } from 'rxjs/operators';\nimport { AuthService } from 'src/app/shared/services/auth/auth.service';\n\n\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css']\n})\n\nexport class LoginPageComponent implements OnInit {\n\n  clicked = false\n\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n\n  matcher = new MyErrorStateMatcher();\n\n  cardLayout = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return {\n          columns: 1,\n          miniCard: { cols: 1, rows: 2 },\n          chart: { cols: 1, rows: 3 },\n          table: { cols: 1, rows: 4 },\n        };\n      }\n \n     return {\n        columns: 2,\n        miniCard: { cols: 1, rows: 2 },\n        chart: { cols: 1, rows: 2 },\n        table: { cols: 4, rows: 3 },\n      };\n    })\n  );\n \n \n   constructor(private breakpointObserver: BreakpointObserver, public authService: AuthService) {}\n\n   ngOnInit(){\n\n   }\n}\n","<div fxLayoutAlign=\"center center\" fxFlexFill class=\"main-div\">\n  <mat-card fxFlex=\"25%\" fxFlex.xs=\"80%\" fxFlex.sm=\"50%\">\n    <mat-toolbar color=\"primary\">Login Page</mat-toolbar>\n      <form>\n        <div fxLayoutAlign=\"stretch\" fxLayout=\"column\" class=\"login-form\">\n        <mat-form-field class=\"email-input\">\n          <input\n            type=\"email\"\n            matInput\n            [formControl]=\"emailFormControl\"\n            [errorStateMatcher]=\"matcher\"\n            placeholder=\"Email Id\"\n            #userEmail\n          />\n          <mat-error\n            *ngIf=\"\n              emailFormControl.hasError('email') &&\n              !emailFormControl.hasError('required')\n            \"\n          >\n            Please enter a valid email address\n          </mat-error>\n          <mat-error *ngIf=\"emailFormControl.hasError('required')\">\n            Email is <strong>required</strong>\n          </mat-error>\n        </mat-form-field>\n  \n        <mat-form-field>\n          <input type = \"password\" matInput placeholder=\"Password\" #userPassword required />\n        </mat-form-field>\n        <div class=\"forgot-password\">\n          <a [routerLink]=\"['/forgot-password']\">Forgot Password?</a>\n        </div>\n        <button mat-raised-button type=\"submit\" [disabled]=\"clicked\" (keyup.enter) = \"authService.SignIn(userEmail.value, userPassword.value); clicked = true;\" (click)=\"authService.SignIn(userEmail.value, userPassword.value); clicked = true;\">Login</button>\n      </div>\n      </form>\n  </mat-card>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DiagnosisChartComponent } from './diagnosis-chart/diagnosis-chart.component';\nimport { StatusChartComponent } from './status-chart/status-chart.component';\nimport { VaccinationChartComponent } from './vaccination-chart/vaccination-chart.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from '../app-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from '../material/material.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { ChartsModule } from 'ng2-charts';\nimport { RouterModule } from '@angular/router';\n\n\n\n@NgModule({\n  declarations: [\n    DiagnosisChartComponent,\n    StatusChartComponent,\n    VaccinationChartComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule,\n    LayoutModule,\n    ChartsModule,\n    RouterModule,\n    CommonModule\n  ],\n  exports: [\n    DiagnosisChartComponent,\n    StatusChartComponent,\n    VaccinationChartComponent\n  ]\n})\nexport class DataChartsModule { }\n","import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Component, NgZone, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { AngularFireStorage } from '@angular/fire/storage';\nimport { Router } from '@angular/router';\nimport * as moment from 'moment';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { Employee } from 'src/app/shared/interfaces/employee/employee';\nimport { userDetails } from 'src/app/shared/interfaces/user/userDetails';\nimport { AuthService } from 'src/app/shared/services/auth/auth.service';\nimport { EmployeeService } from 'src/app/shared/services/employee/employee.service';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements OnInit {\n  employee : Employee;\n  list : Employee[];\n  userD : userDetails;\n  currentUser : userDetails\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  constructor(private af : AngularFireStorage, private breakpointObserver: BreakpointObserver, public authService: AuthService,\n    public router: Router,\n    public ngZone: NgZone, private service : EmployeeService, private firestore : AngularFirestore, private afAuth: AngularFireAuth) { }\n\n    cardLayout = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n      map(({ matches }) => {\n        if (matches) {\n          return {\n            columns: 1,\n            miniCard: { cols: 1, rows: 1 },\n            chart: { cols: 1, rows: 5 },\n            table: { cols: 1, rows: 4 },\n          };\n        }\n  \n        return {\n          columns: 4,\n          miniCard: { cols: 1, rows: 1 },\n          chart: { cols: 3, rows: 2 },\n          table: { cols: 1, rows: 2 },\n        };\n      })\n    );\n\n  ngOnInit(): void {\n    this.afAuth.authState.subscribe(user => {\n      this.firestore.doc(`usersData/${user.uid}`).valueChanges().subscribe(res => {\n        this.currentUser = res\n      })\n    })\n  }\n\n}\n","<mat-sidenav-container class=\"sidenav-container\" [hasBackdrop]=\"true\">\n    <mat-sidenav\n      #drawer\n      class=\"sidenav\"\n      fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === true\"\n    >\n      <mat-toolbar class=\"menuHeader\" fxLayoutAlign=\"center center\"\n        >Menu</mat-toolbar\n      >\n        <mat-nav-list *ngIf=\"!currentUser?.admin\">\n          <a\n            mat-list-item\n            [routerLink]=\"['/employee/vform']\"\n            routerLinkActive=\"router-link-active\"\n            >Vaccination Form</a\n          >\n        </mat-nav-list>\n  \n        <mat-nav-list *ngIf=\"!currentUser?.admin\">\n          <a\n            mat-list-item\n            [routerLink]=\"['/employee/dform']\"\n            routerLinkActive=\"router-link-active\"\n            >Diagnosis Form</a\n          >\n        </mat-nav-list>\n  \n      <!-- <mat-nav-list>\n        <a\n          mat-list-item\n          [routerLink]=\"['/nav/dashboard']\"\n          routerLinkActive=\"router-link-active\"\n          *ngIf=\"currentUser?.admin\"\n          >Dashboard</a\n        >\n      </mat-nav-list> -->\n    </mat-sidenav>\n    <mat-sidenav-content>\n      <mat-toolbar color=\"primary\">\n        <mat-toolbar-row>\n          <div fxLayout = \"row\" fxLayoutAlign=\"center center\">\n            <div>\n              <button mat-icon-button [routerLink]=\"['/employee/homepage']\" routerLinkActive=\"router-link-active\" >\n                <mat-icon>home</mat-icon>\n                </button>\n            </div>\n            <div>\n              <span style=\"font-size: medium;\">Employee Portal</span>\n            </div>\n          </div>\n          \n          \n          <!-- <button mat-icon-button (click)=\"drawer.toggle()\">\n            <mat-icon>menu</mat-icon>\n          </button> -->\n  \n          <div fxFlex fxLayout fxLayoutAlign=\"flex-end center\">\n            <span *ngIf=\"(isHandset$ | async) === false\" class=\"displayName\" style=\"font-size: medium;\"\n              >{{currentUser?.name }}</span\n            >\n  \n            <!-- <button mat-icon-button *ngIf=\"currentUser?.admin\" [matMenuTriggerFor]=\"notifications\">\n              <mat-icon matBadge=\"3\" matBadgePosition=\"after\" matBadgeColor=\"accent\">circle_notifications</mat-icon>\n            </button> -->\n            <button mat-icon-button [matMenuTriggerFor]=\"auth\">\n              <mat-icon>person_outline</mat-icon>\n            </button>\n  \n            <!-- <mat-menu class=\"notifications\" #notifications=\"matMenu\" xPosition=\"before\">\n              <mat-list>\n                <mat-list-item class=\"notification-list-item\" >\n                    <mat-icon class=\"notification-icons\">vaccines</mat-icon>\n                    Alphonse filled the vaccination form.\n                </mat-list-item>\n                <mat-divider></mat-divider>\n                <mat-list-item class=\"notification-list-item\">\n                  <mat-icon class=\"notification-icons\">coronavirus</mat-icon>\n                  Arnette filled the diagnosis form.\n                </mat-list-item>\n                <mat-divider></mat-divider>\n                <mat-list-item class=\"notification-list-item\">\n                  <mat-icon class=\"notification-icons\">vaccines</mat-icon>\n                  Andria filled the vaccination form.\n                </mat-list-item>\n              </mat-list>\n            </mat-menu> -->\n  \n            <mat-menu #auth=\"matMenu\">\n              <!-- <button mat-menu-item>\n                <mat-icon>account_circle</mat-icon>\n                <span>View Profile</span>\n              </button>\n              <button mat-menu-item>\n                <mat-icon>vpn_key</mat-icon>\n                <span>Change Password</span>\n              </button> -->\n              <button mat-menu-item>\n                <mat-icon>exit_to_app</mat-icon>\n                <span (click)=\"authService.SignOut()\">Sign out</span>\n              </button>\n            </mat-menu>\n          </div>\n        </mat-toolbar-row>\n      </mat-toolbar>\n      <router-outlet></router-outlet>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n  \n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ForgotPasswordComponent } from './components/authentication/forgot-password/forgot-password.component';\nimport { LoginPageComponent } from './components/authentication/login-page/login-page.component';\nimport { DashboardComponent } from './components/nav/dashboard/dashboard.component';\nimport { EmployeeDetailsPageComponent } from './employee-details-page/employee-details-page.component';\nimport { NavComponent } from './components/nav/nav.component';\nimport { AuthGuard } from './shared/guard/auth/auth.guard';\nimport { AdminGuard } from './shared/guard/admin.guard';\nimport { VaccinationFormComponent } from './components/vaccination-form/vaccination-form.component';\nimport { DiagnosisFormComponent } from './components/diagnosis-form/diagnosis-form.component';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { EmployeeComponent } from './components/employee/employee.component';\nimport { HomepageComponent } from './components/employee/homepage/homepage.component';\nconst routes: Routes = [\n  { path: '', component: LoginPageComponent },\n//   { path: 'nav', component: NavComponent,canActivate: [AuthGuard],\n//           children: [\n//             { path: 'vform', component: VaccinationFormComponent},\n//             { path: 'dform', component: DiagnosisFormComponent},\n//              { path: 'dashboard', component: DashboardComponent},\n//              { path: 'empdetails/:id', component: EmployeeDetailsPageComponent}\n//           ]\n// },\n{ path: 'admin', component: AdminComponent, canActivate: [AuthGuard],\n  children: [\n    { path: 'dashboard', component: DashboardComponent},\n    { path: 'empdetails/:id', component: EmployeeDetailsPageComponent}\n  ]},\n  {path: 'employee', component: EmployeeComponent, canActivate: [AuthGuard],\n  children : [\n    {path:'homepage', component: HomepageComponent},\n    { path: 'vform', component: VaccinationFormComponent},\n    { path: 'dform', component: DiagnosisFormComponent}\n  ]},\n  { path: 'login', component: LoginPageComponent},\n  { path: 'forgot-password', component: ForgotPasswordComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, NgZone, OnInit, ViewChild } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { EmployeeService } from 'src/app/shared/services/employee/employee.service';\nimport { Employee } from 'src/app/shared/interfaces/employee/employee';\nimport { MatPaginator } from '@angular/material/paginator';\nimport * as moment from 'moment';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\n\nexport class DashboardComponent implements OnInit{\n\n  dataSource = new MatTableDataSource<any>()\n  dataSource2 = new MatTableDataSource<any>()\n  displayedColumns: string[] = ['empid', 'name', 'age', 'location', 'department', 'firstDose', 'secondDose', 'diagnosed', 'eligible']\n  displayedColumns2: string[] = ['empid', 'name', 'age', 'location', 'department', 'firstDose', 'secondDose', 'diagnosed', 'eligible', 'reason']\n  departmentFilter : string\n  ageFilter : number = null\n  vaccinationFilter : string\n  diagnosisFilter : string\n  eligibleCount = 0\n  nonEligibleCount = 0\n  pendingResponseCount = 0\n  firstDoseCount = 0\n  secondDoseCount = 0\n  noDoseCount = 0\n  testedNegativeCount = 0\n  diagnosedCount = 0\n\ncardLayout = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n   map(({ matches }) => {\n     if (matches) {\n       return {\n         columns: 1,\n         miniCard: { cols: 1, rows: 2 },\n         chart: { cols: 1, rows: 3 },\n         table: { cols: 1, rows: 4 },\n       };\n     }\n\n    return {\n       columns: 3,\n       miniCard: { cols: 1, rows: 2 },\n       chart: { cols: 2, rows: 3 },\n       table: { cols: 3, rows: 3 },\n     };\n   })\n );\n\n list : Employee[];\n @ViewChild(MatPaginator) paginator: MatPaginator\n\n\n  constructor(private afs: AngularFirestore,private breakpointObserver: BreakpointObserver, private service : EmployeeService, public router: Router,\n    public ngZone: NgZone, private firestore : AngularFirestore) {}\n\n  ngOnInit(){\n    this.dataSource.filterPredicate = this.filterObject\n\n    this.service.getEmployees().subscribe(data => {\n      this.list = data;\n      // console.log(this.list);\n      this.list.forEach(element => {\n        var answer : string\n        answer = this.getEligibleIn(element)\n        if(answer === 'Eligible'){\n          this.eligibleCount++\n        }else if(answer === undefined){\n          this.pendingResponseCount++\n        }else{\n          this.nonEligibleCount++\n        }\n        \n        if(element.secondDose === 'yesSecond'){\n          this.secondDoseCount++\n        }else if(element.firstDose === 'yesFirst' && element.secondDose === 'noSecond'){\n          this.firstDoseCount++\n        }else{\n          this.noDoseCount++\n        }\n\n        if(element.testedNegative === true){\n          this.testedNegativeCount++\n        }else if(element.diagnosed === 'yesDiagnosed' && element.testedNegative === false){\n          this.diagnosedCount++\n        }\n      })\n      this.service.diagnosedChange(this.diagnosedCount)\n      this.service.testedNegativeChange(this.testedNegativeCount)\n      this.service.firstDoseChange(this.firstDoseCount)\n      this.service.secondDoseChange(this.secondDoseCount)\n      this.service.noDoseChange(this.noDoseCount)\n      this.service.eligibleChange(this.eligibleCount)\n      this.service.nonEligibleChange(this.nonEligibleCount)\n      this.service.pendingChange(this.pendingResponseCount)\n      this.dataSource.data = this.list;\n      this.dataSource.paginator = this.paginator;\n      this.dataSource2.data = this.list\n      this.dataSource2.paginator = this.paginator\n    })\n  }\n\n\n\n  applyFilter(event: Event){\n    const filterValue = (event.target as HTMLInputElement).value\n    this.dataSource.filter = filterValue.trim().toLowerCase()\n  }\n\n  customFilter(){\n    let address = this.dataSource[0]\n    let firstDose = \"\"\n    let secondDose = \"\"\n    let department = \"\"\n    let answer = \"\"\n    let diagnosed = \"\"\n\n    // console.log(answer)\n\n    //department\n    if(this.departmentFilter === \"1\"){\n      department = \"admin\"\n      answer = answer + department\n    }else if(this.departmentFilter === \"2\"){\n      department = \"hr\"\n      answer = answer + department\n    }else if(this.departmentFilter === \"3\"){\n      department = \"security\"\n      answer = answer + department\n    }else if(this.departmentFilter === \"4\"){\n      department = \"development\"\n      answer = answer + department\n    }else if(this.departmentFilter === \"5\"){\n      department = \"accounts\"\n      answer = answer + department\n    }\n\n    if(this.vaccinationFilter === \"1\"){\n      firstDose = \"yesFirst\"\n      answer = answer + \" \" + firstDose\n    }else if(this.vaccinationFilter === \"2\"){\n      secondDose = \"yesSecond\"\n      answer = answer + \" \" + secondDose\n    }\n\n    if(this.diagnosisFilter === \"1\"){\n      diagnosed = \"yesDiagnosed\"\n      answer = answer + \" \" + diagnosed\n    }else if(this.diagnosisFilter === \"2\"){\n      diagnosed = \"noDiagnosed\"\n      answer = answer + \" \" + diagnosed\n    }\n    this.dataSource.filter = answer\n  }\n\n  getAge(dob : string) : number{\n    var dateMomentObject = moment(dob, \"DD/MM/YYYY\")\n    var dateObject = dateMomentObject.toDate()\n    var years = moment().diff(dateObject, 'years', false)\n    return years\n  }\n\n  getEligibleIn(employee: Employee) : string{\n    var eligibility : string\n    if(employee.secondDose === \"noSecond\" && employee.testedNegative === false){\n      eligibility = 'Not Eligible'\n      return 'Not Eligible'\n    }else{\n      if(employee.secondDose === \"yesSecond\" && employee.testedNegative === false){\n        var secondDateMomentObject = moment(employee.secondDate, \"DD/MM/YYYY\")\n        var secondDateObject = secondDateMomentObject.toDate()\n        var secondDateDays = moment().diff(secondDateObject, 'days', false)\n\n        if(secondDateDays >= 15){\n          eligibility = 'Eligible'\n          return \"Eligible\"\n        }else{\n          eligibility = \"Eligible in \" + (15-secondDateDays) + \" days.\"\n          return \"Eligible in \" + (15-secondDateDays) + \" days.\"\n        }\n      }else if(employee.secondDose === \"noSecond\" && employee.testedNegative === true){\n        var dateNegativeMomentObject = moment(employee.dateNegative, \"DD/MM/YYYY\")\n        var dateNegativeObject = dateNegativeMomentObject.toDate()\n        var testedNegativeDays = moment().diff(dateNegativeObject, 'days', false)\n\n        if(testedNegativeDays >= 15 && testedNegativeDays <= 90){\n          eligibility = 'Eligible'\n          return \"Eligible\"\n        }else if(testedNegativeDays < 15){\n          eligibility = \"Eligible in \" + (15-testedNegativeDays) + \" days\"\n          return \"Eligible in \" + (15-testedNegativeDays) + \" days\"\n        }else if(testedNegativeDays > 90){\n          eligibility = 'Not Eligible'\n          return 'Not Eligible'\n        }\n      }else{\n        var dateNegativeMomentObject = moment(employee.dateNegative, \"DD/MM/YYYY\")\n        var dateNegativeObject = dateNegativeMomentObject.toDate()\n        var testedNegativeDays = moment().diff(dateNegativeObject, 'days', false)\n\n        if(testedNegativeDays >= 15 && testedNegativeDays <= 90){\n          eligibility = 'Eligible'\n          return \"Eligible\"\n        }else if(testedNegativeDays < 15){\n          eligibility = \"Eligible in \" + (15 - testedNegativeDays) + \" days\"\n          return \"Eligible in \" + (15 - testedNegativeDays) + \" days\"\n        }\n      }\n    }\n    // console.log(this.eligibileCount)\n    // this.afs.doc(`employees/${employee.name}`)?.update({eligibilty: this.eligibilty})\n  }\n\n  filterObject(obj, filter): boolean {\n    var data = \"\"\n    var answer = []\n    let finalAnswer = true\n    JSON.parse(JSON.stringify(obj), (key,val) => {\n      if (typeof val !== \"object\")\n        data = data + val.toString();\n    })\n    data = data.toLowerCase()\n    filter.split(' ').forEach(element => {\n      if(data.includes(element.toLowerCase()) === false){\n        answer.push(false)\n      }else{\n        answer.push(true)\n      }\n    })\n    answer.forEach(element => {\n      if(element === false){\n        finalAnswer = false\n    }}\n    )\n    return finalAnswer\n  }\n\n  clearFilter(){\n    this.dataSource.filter = 'xxx'\n    this.departmentFilter = \"\"\n    this.vaccinationFilter = \"\"\n    this.diagnosisFilter = \"\"\n  }\n\n  onClick(event, item){\n    this.router.navigate(['/admin/empdetails', item.id]);\n  }\n}\n","<div class=\"grid-container\">\n  <mat-grid-list cols=\"{{ (cardLayout | async)?.columns }}\" rowHeight=\"200px\">\n\n    <!-- <mat-grid-tile\n      [colspan]=\"(cardLayout | async)?.miniCard.cols\"\n      [rowspan]=\"(cardLayout | async)?.miniCard.rows\"\n    >\n    <mat-card class=\"dashboard-card\">\n      <mat-toolbar class=\"chart-bar\">\n        <span>OFFICE STRENGTH</span>\n      </mat-toolbar>\n      <mat-card-content class=\"dashboard-card-content\">\n        <app-employees-at-work-chart></app-employees-at-work-chart>\n      </mat-card-content>\n    </mat-card>\n    </mat-grid-tile> -->\n        <mat-grid-tile\n      [colspan]=\"(cardLayout | async)?.miniCard.cols\"\n      [rowspan]=\"(cardLayout | async)?.miniCard.rows\"\n    >\n    <mat-card class=\"dashboard-card\">\n      <mat-toolbar class=\"chart-bar\">\n        <span>STATUS</span>\n      </mat-toolbar>\n      <mat-card-content class=\"dashboard-card-content\">\n        <div><app-status-chart></app-status-chart></div\n          >\n      </mat-card-content>\n    </mat-card>\n  </mat-grid-tile>\n\n        <mat-grid-tile\n      [colspan]=\"(cardLayout | async)?.miniCard.cols\"\n      [rowspan]=\"(cardLayout | async)?.miniCard.rows\"\n    >\n    <mat-card class=\"dashboard-card\">\n      <mat-toolbar class=\"chart-bar\">\n        <span>VACCINATION</span>\n      </mat-toolbar>\n      <mat-card-content class=\"dashboard-card-content\">\n        <app-vaccination-chart></app-vaccination-chart>\n      </mat-card-content>\n    </mat-card>\n    </mat-grid-tile>\n\n        <mat-grid-tile\n      [colspan]=\"(cardLayout | async)?.miniCard.cols\"\n      [rowspan]=\"(cardLayout | async)?.miniCard.rows\"\n    >\n    <mat-card class=\"dashboard-card\">\n      <mat-toolbar class=\"chart-bar\">\n        <span>DIAGNOSIS</span>\n      </mat-toolbar>\n      <mat-card-content class=\"dashboard-card-content\">\n        <app-diagnosis-chart></app-diagnosis-chart>\n      </mat-card-content>\n    </mat-card>\n    </mat-grid-tile> \n\n    <mat-grid-tile\n      [colspan]=\"(cardLayout | async)?.table.cols\"\n      [rowspan]=\"(cardLayout | async)?.table.rows\"\n    >\n    <mat-card class=\"dashboard-card\">\n      <mat-card-content class=\"dashboard-card-content\">\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n          <mat-form-field  class=\"employee-search\" appearance=\"standard\">\n            <mat-label>Search</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" #input>\n          </mat-form-field>\n  \n          <div>\n            <button mat-icon-button [matMenuTriggerFor]=\"filters\">\n              <mat-icon>filter_alt</mat-icon>\n            </button>\n            <button mat-icon-button (click)=\"exporter.exportTable('csv', {fileName : 'report'})\">\n              <mat-icon>file_download</mat-icon>\n            </button>\n          </div>\n        </div>\n        <br>\n\n        <mat-menu #filters = \"matMenu\">\n          <mat-accordion (click) = \"$event.stopPropagation()\">\n            <mat-expansion-panel>\n              <mat-expansion-panel-header>\n                <mat-panel-title>\n                  Filter by department\n                </mat-panel-title>\n                <mat-icon>apartment</mat-icon>\n              </mat-expansion-panel-header>\n                <mat-form-field appearance=\"fill\">\n                  <mat-label>Department</mat-label>\n                  <mat-select [(ngModel)]=\"departmentFilter\">\n                    <mat-option value=\"1\">Admin</mat-option>\n                    <mat-option value=\"2\">HR</mat-option>\n                    <mat-option value=\"3\">Security</mat-option>\n                    <mat-option value=\"4\">Development</mat-option>\n                    <mat-option value=\"5\">Accounts</mat-option>\n                    <mat-option value = \"\">None</mat-option>\n                  </mat-select>\n                </mat-form-field>\n            </mat-expansion-panel>\n\n            <mat-expansion-panel>\n              <mat-expansion-panel-header>\n                <mat-panel-title>\n                  Filter by Vaccination\n                </mat-panel-title>\n                <mat-icon>vaccines</mat-icon>\n              </mat-expansion-panel-header>\n                <mat-form-field appearance=\"fill\">\n                  <mat-label>Vaccination</mat-label>\n                  <mat-select [(ngModel)]=\"vaccinationFilter\">\n                    <mat-option value=\"1\">First Dose</mat-option>\n                    <mat-option value=\"2\">Second Dose</mat-option>\n                    <mat-option value = \"\">None</mat-option>\n                  </mat-select>\n                </mat-form-field>\n            </mat-expansion-panel>\n\n            <mat-expansion-panel>\n              <mat-expansion-panel-header>\n                <mat-panel-title>\n                  Filter by Diagnosis\n                </mat-panel-title>\n                <mat-icon>coronavirus</mat-icon>\n              </mat-expansion-panel-header>\n              <mat-form-field appearance=\"fill\">\n                <mat-label>Diagnosis</mat-label>\n                <mat-select [(ngModel)]=\"diagnosisFilter\">\n                  <mat-option value=\"1\">Diagnosed</mat-option>\n                  <mat-option value=\"2\">Not Diagnosed</mat-option>\n                  <mat-option value = \"\">None</mat-option>\n                </mat-select>\n              </mat-form-field>\n            </mat-expansion-panel>\n\n          </mat-accordion> \n          <br>\n          <div  fxLayout=\"row\" fxLayoutAlign=\"center center\">\n            <button mat-raised-button color=\"primary\" (click) = \"customFilter()\">Apply</button>\n            <button mat-raised-button color=\"warn\" (click) = \"clearFilter()\">Reset</button>\n          </div>\n          \n              \n        </mat-menu>\n\n        <!-- <div class=\"mat-elevation-z8\">\n          <table mat-table matTableExporter [dataSource] = \"dataSource\" class=\"full-width-table\" matSort aria-label=\"Elements\" #exporter=\"matTableExporter\">\n            <ng-container matColumnDef=\"empid\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>ID</th>\n              <td mat-cell *matCellDef=\"let employee\">{{employee.empid}}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"name\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n              <td mat-cell *matCellDef=\"let employee\">{{employee.name}}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"age\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Age</th>\n              <td mat-cell *matCellDef=\"let employee\">{{getAge(employee.dob)}}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"location\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Location</th>\n              <td mat-cell *matCellDef=\"let employee\">\n                <div *ngIf=\"employee.location !== ''\">{{employee.location}}</div>\n                <div *ngIf=\"employee.location === ''\">-</div>\n              </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"department\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Department</th>\n              <td mat-cell *matCellDef=\"let employee\">{{employee.department}}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"firstDose\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>First Dose</th>\n              <td mat-cell *matCellDef=\"let employee\">\n                <span *ngIf=\"employee.firstDose == 'yesFirst'\">Yes</span>\n                <span *ngIf=\"employee.firstDose == 'noFirst' || employee.firstDose === ''\">No</span>\n                </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"secondDose\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Second Dose</th>\n              <td mat-cell *matCellDef=\"let employee\">\n                <span *ngIf=\"employee.secondDose == 'yesSecond'\">Yes</span>\n                <span *ngIf=\"employee.secondDose == 'noSecond'  || employee.secondDose === ''\">No</span>\n                </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"diagnosed\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Diagnosed</th>\n              <td mat-cell *matCellDef=\"let employee\">\n                <span *ngIf=\"employee.diagnosed == 'yesDiagnosed'\">Yes</span>\n                <span *ngIf=\"employee.diagnosed == 'noDiagnosed' || employee.diagnosed == ''\">No</span>\n                </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"eligible\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Eligible In</th>\n              <td mat-cell *matCellDef=\"let employee\">\n                <div *ngIf=\"employee.secondDose !== '' || employee.diagnosed !== ''\">{{getEligibleIn(employee)}}</div>\n                <div *ngIf=\"(employee.secondDose === '' && employee.diagnosed === '') || (employee.secondDose === '' && employee.diagnosed === 'noDiagnosed')\">Pending Response</div>\n                <div *ngIf=\"employee.diagnosed == 'yesDiagnosed' && employee.testedNegative == false \">Not Negative</div>\n              </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef = \"let row; columns: displayedColumns;\" (click)=\"onClick($event, row)\"></tr>\n\n            <tr class=\"mat-row\" *matNoDataRow>\n            <td class=\"mat-cell\" colspan=\"4\">No match</td>\n            </tr>\n          </table>\n          <mat-paginator\n            [pageSizeOptions]=\"[5, 10, 20]\"\n            showFirstLastButtons\n          ></mat-paginator>\n        </div> -->\n\n        <div class=\"example-container mat-elevation-z8\">\n          <mat-table #table  [dataSource] = \"dataSource\" aria-label=\"Elements\">\n            <ng-container matColumnDef=\"empid\">\n              <mat-header-cell *matHeaderCellDef><span class=\"header-cell\">ID</span></mat-header-cell>\n              <mat-cell *matCellDef=\"let employee\">\n                <span class=\"mobile-label\">ID:</span>\n                {{employee.empid}}\n              </mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"name\">\n              <mat-header-cell *matHeaderCellDef> <span class=\"header-cell\">Name</span></mat-header-cell>\n              <mat-cell *matCellDef=\"let employee\">\n                <span class=\"mobile-label\">Name:</span>\n                {{employee.name}}</mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"age\">\n              <mat-header-cell *matHeaderCellDef> <span class=\"header-cell\">Age</span> </mat-header-cell>\n              <mat-cell *matCellDef=\"let employee\">\n                <span class=\"mobile-label\">Age:</span>\n                {{getAge(employee.dob)}}</mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"location\">\n              <mat-header-cell *matHeaderCellDef> <span class=\"header-cell\">Location</span> </mat-header-cell>\n              <mat-cell *matCellDef=\"let employee\">\n                <span class=\"mobile-label\">Location:</span>\n                <div *ngIf=\"employee.location !== ''\">{{employee.location}}</div>\n                <div *ngIf=\"employee.location === ''\">-</div>\n              </mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"department\">\n              <mat-header-cell *matHeaderCellDef> <span class=\"header-cell\">Department</span> </mat-header-cell>\n              <mat-cell *matCellDef=\"let employee\" style=\"text-transform: capitalize;\">\n                <span class=\"mobile-label\">Department:</span>\n                {{employee.department}}</mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"firstDose\">\n              <mat-header-cell *matHeaderCellDef> <span class=\"header-cell\">First Dose</span> </mat-header-cell>\n              <mat-cell *matCellDef=\"let employee\">\n                <span class=\"mobile-label\">First Dose:</span>\n                <span *ngIf=\"employee.firstDose == 'yesFirst'\">Yes</span>\n                <span *ngIf=\"employee.firstDose == 'noFirst' || employee.firstDose === ''\">No</span>\n                </mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"secondDose\">\n              <mat-header-cell *matHeaderCellDef> <span class=\"header-cell\">Second Dose</span> </mat-header-cell>\n              <mat-cell *matCellDef=\"let employee\">\n                <span class=\"mobile-label\">Second Dose:</span>\n                <span *ngIf=\"employee.secondDose == 'yesSecond'\">Yes</span>\n                <span *ngIf=\"employee.secondDose == 'noSecond'  || employee.secondDose === ''\">No</span>\n                </mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"diagnosed\">\n              <mat-header-cell *matHeaderCellDef> <span class=\"header-cell\">Diagnosed</span> </mat-header-cell>\n              <mat-cell *matCellDef=\"let employee\">\n                <span class=\"mobile-label\">Diagnosed:</span>\n                <span *ngIf=\"employee.diagnosed == 'yesDiagnosed'\">Yes</span>\n                <span *ngIf=\"employee.diagnosed == 'noDiagnosed' || employee.diagnosed == ''\">No</span>\n                </mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"eligible\">\n              <mat-header-cell *matHeaderCellDef> <span class=\"header-cell\">Eligibility</span> </mat-header-cell>\n              <mat-cell *matCellDef=\"let employee\">\n                <span class=\"mobile-label\">Eligibility:</span>\n                <div *ngIf=\"employee.secondDose !== '' || employee.diagnosed !== ''\">{{getEligibleIn(employee)}}</div>\n                <div *ngIf=\"(employee.secondDose === '' && employee.diagnosed === '') || (employee.secondDose === '' && employee.diagnosed === 'noDiagnosed')\">Pending Response</div>\n                <div *ngIf=\"employee.diagnosed == 'yesDiagnosed' && employee.testedNegative == false \">Not Negative</div>\n              </mat-cell>\n            </ng-container>\n\n\n              <ng-container matColumnDef=\"reason\">\n                <mat-header-cell *matHeaderCellDef> <span class=\"header-cell\">Reason</span></mat-header-cell>\n                <mat-cell *matCellDef=\"let employee\">\n                  <span class=\"mobile-label\">Reason:</span>\n                  <div *ngIf=\"employee.firstReason === '' && employee.secondReason === ''\">Pending Response</div>\n                  <div *ngIf=\"employee.firstReason !== ''\">{{employee.firstReason}}</div>\n                  <div *ngIf=\"employee.secondReason !== ''\">{{employee.secondReason}}</div>\n                </mat-cell>\n              </ng-container>\n \n            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n            <mat-row *matRowDef = \"let row; columns: displayedColumns;\" (click)=\"onClick($event, row)\"></mat-row>\n\n            <tr *matNoDataRow>\n                  <td>No results found</td>\n              </tr>\n          </mat-table>\n          <mat-paginator\n            [pageSizeOptions]=\"[5, 10, 20]\"\n            showFirstLastButtons\n          ></mat-paginator>\n        </div>\n\n        <div class=\"example-container mat-elevation-z8\" style=\"display: none;\">\n          <mat-table matTableExporter [dataSource] = \"dataSource2\" aria-label=\"Elements\" #exporter=\"matTableExporter\">\n            <ng-container matColumnDef=\"empid\">\n              <mat-header-cell *matHeaderCellDef><span class=\"header-cell\">ID</span></mat-header-cell>\n              <mat-cell *matCellDef=\"let employee\">\n                {{employee.empid}}\n              </mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"name\">\n              <mat-header-cell *matHeaderCellDef> <span class=\"header-cell\">Name</span></mat-header-cell>\n              <mat-cell *matCellDef=\"let employee\">\n                {{employee.name}}</mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"age\">\n              <mat-header-cell *matHeaderCellDef> <span class=\"header-cell\">Age</span> </mat-header-cell>\n              <mat-cell *matCellDef=\"let employee\">\n                {{getAge(employee.dob)}}</mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"location\">\n              <mat-header-cell *matHeaderCellDef> <span class=\"header-cell\">Location</span> </mat-header-cell>\n              <mat-cell *matCellDef=\"let employee\">\n                <div *ngIf=\"employee.location !== ''\">{{employee.location}}</div>\n                <div *ngIf=\"employee.location === ''\">-</div>\n              </mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"department\">\n              <mat-header-cell *matHeaderCellDef> <span class=\"header-cell\">Department</span> </mat-header-cell>\n              <mat-cell *matCellDef=\"let employee\" style=\"text-transform: capitalize;\">\n                {{employee.department}}</mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"firstDose\">\n              <mat-header-cell *matHeaderCellDef> <span class=\"header-cell\">First Dose</span> </mat-header-cell>\n              <mat-cell *matCellDef=\"let employee\">\n                <span *ngIf=\"employee.firstDose == 'yesFirst'\">Yes</span>\n                <span *ngIf=\"employee.firstDose == 'noFirst' || employee.firstDose === ''\">No</span>\n                </mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"secondDose\">\n              <mat-header-cell *matHeaderCellDef> <span class=\"header-cell\">Second Dose</span> </mat-header-cell>\n              <mat-cell *matCellDef=\"let employee\">\n                <span *ngIf=\"employee.secondDose == 'yesSecond'\">Yes</span>\n                <span *ngIf=\"employee.secondDose == 'noSecond'  || employee.secondDose === ''\">No</span>\n                </mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"diagnosed\">\n              <mat-header-cell *matHeaderCellDef> <span class=\"header-cell\">Diagnosed</span> </mat-header-cell>\n              <mat-cell *matCellDef=\"let employee\">\n                <span *ngIf=\"employee.diagnosed == 'yesDiagnosed'\">Yes</span>\n                <span *ngIf=\"employee.diagnosed == 'noDiagnosed' || employee.diagnosed == ''\">No</span>\n                </mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"eligible\">\n              <mat-header-cell *matHeaderCellDef> <span class=\"header-cell\">Eligibility</span> </mat-header-cell>\n              <mat-cell *matCellDef=\"let employee\">\n                <div *ngIf=\"employee.secondDose !== '' || employee.diagnosed !== ''\">{{getEligibleIn(employee)}}</div>\n                <div *ngIf=\"(employee.secondDose === '' && employee.diagnosed === '') || (employee.secondDose === '' && employee.diagnosed === 'noDiagnosed')\">Pending Response</div>\n                <div *ngIf=\"employee.diagnosed == 'yesDiagnosed' && employee.testedNegative == false \">Not Negative</div>\n              </mat-cell>\n            </ng-container>\n\n\n              <ng-container matColumnDef=\"reason\">\n                <mat-header-cell *matHeaderCellDef> <span class=\"header-cell\">Reason</span></mat-header-cell>\n                <mat-cell *matCellDef=\"let employee\">\n                  <div *ngIf=\"employee.firstReason === '' && employee.secondReason === ''\">-</div>\n                  <div *ngIf=\"employee.firstReason !== ''\">{{employee.firstReason}}</div>\n                  <div *ngIf=\"employee.secondReason !== ''\">{{employee.secondReason}}</div>\n                </mat-cell>\n              </ng-container>\n \n            <mat-header-row *matHeaderRowDef=\"displayedColumns2\"></mat-header-row>\n            <mat-row *matRowDef = \"let row; columns: displayedColumns2;\" (click)=\"onClick($event, row)\"></mat-row>\n\n            <tr *matNoDataRow>\n                  <td>No results found</td>\n              </tr>\n          </mat-table>\n          <mat-paginator\n            [pageSizeOptions]=\"[5, 10, 20]\"\n            showFirstLastButtons\n          ></mat-paginator>\n        </div>\n\n      </mat-card-content>\n    </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}